{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/RefreshButton.svelte","../../src/components/ComposeButton.svelte","../../src/components/MenuButton.svelte","../../src/config.js","../../node_modules/svelte/store/index.mjs","../../src/stores/message.js","../../src/stores/url.js","../../src/client.js","../../src/stores/mailboxes.js","../../src/stores/threads.js","../../src/components/InboxIcon.svelte","../../src/components/MailboxButton.svelte","../../src/components/Mailboxes.svelte","../../src/components/SearchField.svelte","../../src/stores/thread.js","../../src/lib/tagging.js","../../src/stores/selected_threads.js","../../src/components/ToolbarButton.svelte","../../src/components/TagBadge.svelte","../../src/components/TagPicker.svelte","../../src/components/ThreadToolbar.svelte","../../src/components/ThreadPages.svelte","../../src/components/Checkbox.svelte","../../src/components/Threads.svelte","../../src/lib/email.js","../../src/lib/linkify.js","../../src/components/DeepquoteBlock.svelte","../../src/components/BodyItem.svelte","../../src/components/FormattedAddress.svelte","../../src/components/MessageInfo.svelte","../../src/stores/new_message.js","../../src/components/MessageToolbar.svelte","../../src/components/Message.svelte","../../src/components/CollapsedMessage.svelte","../../src/components/Thread.svelte","../../src/components/AddressField.svelte","../../src/components/TextEditor.svelte","../../src/components/MessageForm.svelte","../../src/App.svelte","../../src/lib/favicon.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let refreshing;\n</script>\n\n<button\n  class=\"w-6 text-white hover:text-gray-300 active:text-gray-400 focus:outline-none\"\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class={`fill-current ${refreshing ? \"animate-spin\" : \"\"}`}\n    on:click\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n    /></svg\n  >\n</button>\n","<script>\n  export let collapsed = false;\n</script>\n\n{#if collapsed}\n  <button\n    class=\"bg-red-600 hover:bg-red-700 active:bg-red-800 focus:outline-none w-8 text-white h-8 p-1 rounded border-0\"\n    on:click\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current h-full\"\n    >\n      <path d=\"M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6V13z\" />\n      ></svg\n    >\n  </button>\n{:else}\n  <button\n    class=\"bg-red-600 hover:bg-red-700 active:bg-red-800 focus:outline-none w-full text-white h-10 rounded border-0 font-semibold\"\n    on:click\n  >\n    New message\n  </button>\n{/if}\n","<script>\n  export let collapsed;\n</script>\n\n<button\n  class=\"text-gray-300 h-8 p-1 rounded hover:bg-gray-700 focus:outline-none\"\n  on:click\n>\n  {#if collapsed}\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current h-full\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n      /></svg\n    >\n  {:else}\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current h-full\"\n      ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n        d=\"M3 18h13v-2H3v2zm0-5h10v-2H3v2zm0-7v2h13V6H3zm18 9.59L17.42 12 21 8.41 19.59 7l-5 5 5 5L21 15.59z\"\n      /></svg\n    >\n  {/if}\n</button>\n","export const mailboxIds = [\n  \"inbox\",\n  \"archive\",\n  \"sent\",\n  \"draft\",\n  \"spam\",\n  \"trash\",\n];\n\nexport const mailboxTitles = {\n  inbox: \"Inbox\",\n  archive: \"Archive\",\n  sent: \"Sent\",\n  draft: \"Drafts\",\n  spam: \"Spam\",\n  trash: \"Trash\",\n};\n\nexport const threadsPerPage = 50;\nexport const refreshInterval = 60 * 1000;\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\n\nconst { subscribe, set, update } = writable(null);\n\nfunction selectMessage(messageId) {\n  set(messageId);\n}\n\nexport default { subscribe, selectMessage };\n","import { derived, writable } from \"svelte/store\";\nimport { mailboxIds } from \"../config\";\nimport selectedMessage from \"./message\";\n\nconst initialURL = new URL(window.location.href);\nconst href = writable(initialURL);\nconst [, mailbox, thread] = initialURL.pathname.split(\"/\");\ninitialURL.mailbox = mailbox;\nif (mailbox === \"search\") {\n  initialURL.searchTerms = initialURL.searchParams.get(\"terms\");\n} else {\n  initialURL.thread = thread;\n}\n\nconst update = ({ state }) => {\n  const url = new URL(window.location.href);\n  url.mailbox = state?.mailbox;\n  url.thread = state?.thread;\n  url.searchTerms = state?.searchTerms;\n  href.set(url);\n};\n\nwindow.addEventListener(\"popstate\", update);\n\nfunction pushState(state, url) {\n  history.pushState(state, \"\", url);\n  update({ state });\n  console.debug(`navigating to ${url}, state: `, state);\n}\n\nconst url = derived(href, ($href) => $href);\n\nfunction selectMailbox(mailbox) {\n  pushState({ mailbox }, `/${mailbox}`);\n}\n\nfunction selectThread(mailbox, thread) {\n  const state = history.state;\n  const newState = { mailbox, thread, searchTerms: state?.searchTerms };\n  let path = `/${mailbox}/${thread}`;\n  if (state?.searchTerms) {\n    path += `?terms=${escape(state.searchTerms)}`;\n  }\n\n  pushState(newState, path);\n}\n\nfunction deselectThread() {\n  const state = history.state;\n\n  selectedMessage.selectMessage(null);\n  pushState({ mailbox: state.mailbox, thread: null }, `/${state.mailbox}`);\n}\n\nfunction search(terms) {\n  pushState(\n    { mailbox: \"search\", searchTerms: terms },\n    `/search/?terms=${escape(terms)}`\n  );\n}\n\nexport default {\n  subscribe: url.subscribe,\n  selectMailbox,\n  selectThread,\n  deselectThread,\n  search,\n};\n\nexport const selectedMailbox = derived(url, ($url) =>\n  $url.mailbox?.length > 0 ? $url.mailbox : mailboxIds[0]\n);\n\nexport const selectedThread = derived(url, ($url) => $url.thread);\n\nexport const searchTerms = derived(url, ($url) => $url.searchTerms);\n","class ApiClient {\n  static default = new ApiClient(\"/api\");\n\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async request(method = \"GET\", path, data) {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    };\n\n    const res = await fetch(`${this.baseURL}${path}`, {\n      method,\n      headers,\n      body: data ? JSON.stringify(data) : null,\n    });\n\n    if (res.ok) {\n      return res.json();\n    }\n\n    throw new ApiError(res.status, res.statusText);\n  }\n\n  mailboxes() {\n    return this.request(\"GET\", \"/mailboxes\");\n  }\n\n  threads(terms, page = 0, perPage = 50) {\n    return this.request(\"GET\", `/search/${terms}?page=${page}&per=${perPage}`);\n  }\n\n  addresses(terms) {\n    return this.request(\"GET\", `/address/${terms}`);\n  }\n\n  thread(threadId) {\n    return this.request(\"GET\", `/threads/${threadId}`);\n  }\n\n  updateTags(terms, tags) {\n    return this.request(\"PUT\", \"/tags\", { terms, tags });\n  }\n\n  w3mRender(messageId, part) {\n    return this.request(\"GET\", `/messages/${messageId}/w3m/${part}`);\n  }\n\n  async sendMessage(message) {\n    const res = await fetch(`${this.baseURL}/messages`, {\n      method: \"POST\",\n      body: this.messageFormData(message),\n    });\n\n    if (res.ok) {\n      return null;\n    }\n\n    throw new ApiError(res.status, res.statusText);\n  }\n\n  async saveMessage(message) {\n    const res = await fetch(`${this.baseURL}/drafts`, {\n      method: \"POST\",\n      body: this.messageFormData(message),\n    });\n\n    if (res.ok) {\n      return null;\n    }\n\n    throw new ApiError(res.status, res.statusText);\n  }\n\n  replyToMessage(messageId, replyTo) {\n    return this.request(\n      \"GET\",\n      `/messages/${btoa(messageId)}/reply?reply-to=${replyTo}`\n    );\n  }\n\n  messageFormData(message) {\n    const formData = new FormData();\n    message.to.forEach((addr) => formData.append(\"to[]\", addr));\n    message.cc.forEach((addr) => formData.append(\"cc[]\", addr));\n    formData.append(\"subject\", message.subject);\n    formData.append(\"body\", message.body);\n    Object.keys(message.headers).forEach((key) =>\n      formData.append(`headers[${key}]`, message.headers[key])\n    );\n    message.attachments.forEach((file) => {\n      if (file instanceof File) {\n        formData.append(\"attachments[]\", file, file.name);\n      } else {\n        formData.append(\"attachments[]\", file.id);\n      }\n    });\n\n    return formData;\n  }\n}\n\nexport class ApiError extends Error {\n  constructor(status, statusText) {\n    super(`Invalid response ${status}: ${statusText}`);\n    this.status = status;\n  }\n}\n\nexport default ApiClient;\n","import { writable, derived } from \"svelte/store\";\nimport ApiClient from \"../client\";\n\nexport const address = writable(\"\");\nexport const name = writable(null);\nexport const predefinedTags = writable([]);\n\nconst { subscribe, set, update } = writable([]);\n\nconst fetch = async () => {\n  const res = await ApiClient.default.mailboxes();\n  set(res.mailboxes);\n  address.set(res.address);\n  name.set(res.name);\n  predefinedTags.set(res.tags);\n  return res.mailboxes;\n};\n\nconst updateUnreadCounters = async () => {\n  const { mailboxes } = await ApiClient.default.mailboxes();\n  update((current) =>\n    current.map((mailbox, idx) => ({\n      ...mailbox,\n      unread: mailboxes[idx].unread,\n    }))\n  );\n};\n\nexport default { subscribe, fetch, updateUnreadCounters };\n","import { writable, get } from \"svelte/store\";\nimport ApiClient from \"../client\";\nimport { threadsPerPage } from \"../config\";\nimport { selectedMailbox } from \"./url\";\n\nexport const currentPage = writable(0);\nexport const hasMore = writable(false);\n\nconst { subscribe, set, update } = writable([]);\n\nconst fetch = async ({ id, terms }, currentPage) => {\n  if (!terms) {\n    set([]);\n    return [];\n  }\n\n  const { has_more, threads } = await ApiClient.default.threads(\n    terms,\n    currentPage || 0,\n    threadsPerPage\n  );\n\n  if (get(selectedMailbox) === id) {\n    hasMore.set(has_more);\n    set(threads);\n  }\n\n  return threads;\n};\n\nconst setTags = (threadId, tags) => {\n  update((threads) =>\n    threads.map((thread) =>\n      thread.thread === threadId ? { ...thread, tags } : thread\n    )\n  );\n};\n\nconst remove = (threadId) => {\n  update((threads) => threads.filter((thread) => thread != threadId));\n};\n\nexport default { subscribe, fetch, setTags, remove };\n","<script>\n  export let id;\n  export let iconType = \"inbox\";\n</script>\n\n{#if id === \"inbox\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n      d=\"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z\"\n    /></svg\n  >\n{:else if id === \"archive\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    enable-background=\"new 0 0 24 24\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g\n      ><path\n        d=\"M20,2H4C3,2,2,2.9,2,4v3.01C2,7.73,2.43,8.35,3,8.7V20c0,1.1,1.1,2,2,2h14c0.9,0,2-0.9,2-2V8.7c0.57-0.35,1-0.97,1-1.69V4 C22,2.9,21,2,20,2z M15,14H9v-2h6V14z M20,7H4V4h16V7z\"\n      /></g\n    ></svg\n  >\n{:else if id === \"sent\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n      d=\"M19 3H4.99c-1.11 0-1.98.9-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10zM8 11h2v3h4v-3h2l-4-4-4 4z\"\n    /></svg\n  >\n{:else if id === \"draft\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z\"\n    /></svg\n  >\n{:else if id === \"spam\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n    /></svg\n  >\n{:else if id === \"trash\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n    /></svg\n  >\n{:else if id === \"attachment\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n    /></svg\n  >\n{:else if id === \"replied\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\"\n    /></svg\n  >\n{:else if iconType === \"tag\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n    /></svg\n  >\n{:else}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z\"\n    /></svg\n  >\n{/if}\n","<script>\n  import { mailboxTitles } from \"../config\";\n\n  import InboxIcon from \"./InboxIcon.svelte\";\n\n  export let id;\n\n  let hover = false;\n</script>\n\n<span\n  class={`relative ${mailboxTitles[id] ? \"w-5\" : \"w-7\"}`}\n  on:mouseover={() => (hover = true)}\n  on:mouseout={() => (hover = false)}\n>\n  {#if mailboxTitles[id]}\n    <InboxIcon {id} />\n  {:else}\n    <InboxIcon {id} />\n    <span\n      class=\"absolute text-sm left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-2/3\"\n      >{id[0]}</span\n    >\n  {/if}\n\n  <span\n    class={`absolute left-8 z-50 transform bottom-0 translate-y-2 p-2 whitespace-nowrap rounded bg-gray-800 text-white ${\n      hover ? \"\" : \"hidden\"\n    }`}>{mailboxTitles[id] || id}</span\n  >\n</span>\n","<script>\n  import { mailboxTitles } from \"../config\";\n  import url, { selectedMailbox } from \"../stores/url\";\n  import mailboxes from \"../stores/mailboxes\";\n  import { currentPage } from \"../stores/threads\";\n\n  import InboxIcon from \"./InboxIcon.svelte\";\n  import MailboxButton from \"./MailboxButton.svelte\";\n\n  export let collapsed;\n\n  function selectMailbox(id) {\n    currentPage.set(0);\n    url.selectMailbox(id);\n  }\n</script>\n\n<ul>\n  {#await mailboxes.fetch()}\n    {#if collapsed}\n      <p class=\"text-gray-300 text-xl text-center\">...</p>\n    {:else}\n      <p class=\"text-gray-300 text-lg text-center\">...loading</p>\n    {/if}\n  {:then}\n    {#each $mailboxes as mailbox, idx}\n      <li\n        class={`relative p-1 mb-2 flex flex-row ${\n          collapsed ? \"justify-center\" : \"justify-between\"\n        } ${\n          $selectedMailbox === mailbox.id\n            ? \"text-red-500 font-semibold\"\n            : \"text-gray-300\"\n        }`}\n      >\n        <a\n          href={`/${mailbox.id}`}\n          class=\"flex flex-row items-center hover:text-red-500 visited:text-current\"\n          on:click|preventDefault={() => selectMailbox(mailbox.id)}\n        >\n          {#if collapsed}\n            <MailboxButton id={mailbox.id} />\n          {:else}\n            <span class=\"mr-2 w-5\">\n              <InboxIcon id={mailbox.id} />\n            </span>\n            {mailboxTitles[mailbox.id] || mailbox.id}\n          {/if}\n        </a>\n\n        {#if mailbox.unread > 0}\n          {#if collapsed}\n            <span\n              class=\"bg-red-600 absolute -top-1 -right-1 w-2 h-2 rounded-sm\"\n            />\n          {:else}\n            <span\n              class={`inline-flex items-center text-sm px-2 rounded ${\n                mailbox.id === \"inbox\"\n                  ? \"bg-red-600 text-gray-100\"\n                  : \"bg-gray-300 text-gray-600\"\n              }`}>{mailbox.unread}</span\n            >\n          {/if}\n        {/if}\n      </li>\n    {/each}\n  {:catch}\n    {#if collapsed}\n      <p class=\"text-red-500 text-sm text-center\">Error</p>\n    {:else}\n      <p class=\"text-red-500 text-lg text-center\">Error</p>\n    {/if}\n  {/await}\n</ul>\n","<script>\n  import url, { searchTerms } from \"../stores/url\";\n\n  let input;\n\n  export function focus() {\n    input.focus();\n  }\n\n  $: terms = $searchTerms;\n\n  function onKeyPress({ charCode }) {\n    if (charCode === 13) {\n      url.search(terms);\n    }\n  }\n</script>\n\n<div\n  class=\"relative text-gray-300 flex flex-1 sm:flex-none sm:w-96 mb-2 sm:mb-0\"\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-5 absolute left-2 top-1/2 transform -translate-y-1/2\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n    /></svg\n  >\n  <input\n    type=\"search\"\n    class=\"flex-1 h-full outline-none pl-8 pr-1 py-1 bg-gray-600 text-sm border rounded border-gray-500 hover:border-gray-400 focus:border-gray-400\"\n    placeholder=\"Search threads\"\n    on:keypress={onKeyPress}\n    bind:value={terms}\n    bind:this={input}\n    on:focus\n    on:blur\n  />\n</div>\n","import { writable } from \"svelte/store\";\nimport ApiClient from \"../client\";\n\nconst { subscribe, set, update } = writable(null);\n\nexport function findMessage(thread, messageId) {\n  if (!thread) return null;\n\n  for (const [message, subThread] of thread) {\n    if (message.id === messageId) return message;\n\n    const match = findMessage(subThread, messageId);\n    if (match) return match;\n  }\n\n  return null;\n}\n\nexport function findOtherMessage(\n  thread,\n  messageId,\n  withTags = [],\n  withoutTags = []\n) {\n  if (!thread) return null;\n\n  for (const [message, subThread] of thread) {\n    if (\n      message.id != messageId &&\n      withTags.every((tag) => message.tags.includes(tag)) &&\n      withoutTags.every((tag) => !message.tags.includes(tag))\n    ) {\n      return message;\n    }\n\n    const match = findOtherMessage(subThread, messageId, withTags, withoutTags);\n    if (match) return match;\n  }\n\n  return null;\n}\n\nexport function findLastMessage(\n  thread,\n  messageId,\n  withTags = [],\n  withoutTags = []\n) {\n  const messages = matchedMessages(\n    thread,\n    messageId,\n    withTags,\n    withoutTags\n  ).sort((a, b) => b.timestamp - a.timestamp);\n\n  return messages.length > 0 ? messages[0] : null;\n}\n\nfunction matchedMessages(thread, messageId, withTags, withoutTags, acc = []) {\n  if (!thread) return acc;\n\n  for (const [message, subThread] of thread) {\n    if (\n      message.id != messageId &&\n      withTags.every((tag) => message.tags.includes(tag)) &&\n      withoutTags.every((tag) => !message.tags.includes(tag))\n    ) {\n      acc.push(message);\n    }\n\n    matchedMessages(subThread, messageId, withTags, withoutTags, acc);\n  }\n\n  return acc;\n}\n\nfunction getThreadTags(set, thread) {\n  for (const [message, subThread] of thread) {\n    message.tags.forEach((tag) => set.add(tag));\n    getThreadTags(set, subThread);\n  }\n\n  return set;\n}\n\nconst fetch = async (selectedThread) => {\n  if (!selectedThread) {\n    set(null);\n    return null;\n  }\n\n  const thread = await ApiClient.default.thread(selectedThread);\n  set(thread);\n\n  return thread;\n};\n\nfunction updateTags(messageId, tags) {\n  const threadTags = new Set();\n\n  update((thread) => {\n    const message = findMessage(thread, messageId);\n    if (message) message.tags = tags;\n    getThreadTags(threadTags, thread);\n    return thread;\n  });\n\n  return [...threadTags];\n}\n\nexport function getFirstMessage(thread) {\n  const [firstThread] = thread;\n  if (!firstThread) return null;\n\n  const [message] = firstThread;\n  if (!message) return null;\n\n  return message;\n}\n\nexport default { subscribe, fetch, updateTags };\n","import ApiClient from \"../client\";\nimport mailboxes from \"../stores/mailboxes\";\nimport threads from \"../stores/threads\";\nimport thread from \"../stores/thread\";\n\nexport async function updateTags(threadId, messageId, updates) {\n  if (!messageId || !threadId) return [];\n\n  const newTags = await ApiClient.default.updateTags(\n    `id:${messageId}`,\n    updates\n  );\n\n  const threadTags = thread.updateTags(messageId, newTags);\n  threads.setTags(threadId, threadTags);\n  mailboxes.updateUnreadCounters();\n\n  return newTags;\n}\n\nexport async function updateThreadTags(threadId, updates) {\n  if (!threadId) return [];\n\n  const newTags = await ApiClient.default.updateTags(\n    `thread:${threadId}`,\n    updates\n  );\n\n  threads.setTags(threadId, newTags);\n  await mailboxes.updateUnreadCounters();\n\n  return newTags;\n}\n\nexport async function markAsRead(threadId, message) {\n  if (!message.tags.includes(\"unread\")) return [];\n\n  return await updateTags(threadId, message.id, [\"-unread\"]);\n}\n\nexport function tagChanges(mailboxes, fromMailbox, toMailbox) {\n  const fromTags = mailboxes.find(({ id }) => id === fromMailbox).tags;\n  const toTags = mailboxes.find(({ id }) => id === toMailbox).tags;\n\n  const changes = [];\n  mailboxes.forEach(({ tags }) =>\n    tags.forEach((tag) => !toTags.includes(tag) && changes.push(`-${tag}`))\n  );\n  toTags.forEach((tag) => changes.push(`+${tag}`));\n\n  return { changes, fromTags, toTags };\n}\n","import { writable } from \"svelte/store\";\n\nconst { subscribe, update } = writable([]);\n\nfunction toggle({ thread }) {\n  update((threads) =>\n    threads.includes(thread)\n      ? threads.filter((id) => id !== thread)\n      : [...threads, thread]\n  );\n}\n\nexport default { subscribe, toggle };\n","<script>\n  export let tooltip;\n  export let tooltipPosition = \"center\";\n  export let variant = \"message\";\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let tooltipClass = \"-translate-x-1/2\";\n  $: if (tooltipPosition === \"left\") {\n    tooltipClass = \"left-0\";\n  } else if (tooltipPosition === \"right\") {\n    tooltipClass = \"right-0\";\n  } else {\n    tooltipClass = \"left-4 -translate-x-1/2\";\n  }\n\n  let hover = false;\n</script>\n\n<div\n  class=\"h-full relative {className}\"\n  on:mouseover={() => (hover = true)}\n  on:mouseout={() => (hover = false)}\n>\n  {#if variant === \"toolbar\"}\n    <button\n      {disabled}\n      class=\"h-full p-2 rounded text-gray-300 focus:outline-none hover:text-gray-100 active:text-gray-100 disabled:opacity-25\"\n      on:click\n    >\n      <slot />\n    </button>\n    <span\n      class={`absolute -bottom-full z-50 transform ${tooltipClass} translate-y-2 p-2 whitespace-nowrap rounded bg-gray-800 text-white ${\n        hover ? \"\" : \"hidden\"\n      }`}>{tooltip}</span\n    >\n  {:else}\n    <button\n      {disabled}\n      class=\"w-9 p-2 rounded hover:border-gray-500 bg-white text-gray-700 active:bg-gray-300 focus:outline-none border\"\n      on:click\n    >\n      <slot />\n    </button>\n    <span\n      class={`absolute -top-full z-50 transform ${tooltipClass} -translate-y-2 p-2 whitespace-nowrap rounded bg-gray-800 text-white ${\n        hover ? \"\" : \"hidden\"\n      }`}>{tooltip}</span\n    >\n  {/if}\n</div>\n","<script>\n  import InboxIcon from \"./InboxIcon.svelte\";\n\n  export let tag;\n  export let viewOnly = true;\n\n  let className = \"\";\n  export { className as class };\n\n  $: classes = viewOnly ? \"\" : \"cursor-pointer hover:text-red-500\";\n</script>\n\n<div\n  class=\"inline-flex items-center text-gray-600 text-sm max-w-xs truncate {className} {classes}\"\n  on:click\n>\n  <span class=\"w-4 mr-1 flex-shrink-0\">\n    <InboxIcon id={tag} iconType=\"tag\" />\n  </span>\n\n  <span>{tag}</span>\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  import mailboxes, { predefinedTags } from \"../stores/mailboxes\";\n\n  import TagBadge from \"./TagBadge.svelte\";\n\n  export let tags = [];\n\n  let className = \"\";\n  export { className as class };\n\n  const dispatch = createEventDispatcher();\n  let newTag = \"\";\n\n  $: allTags = $mailboxes\n    .reduce((acc, { tags }) => acc.concat(tags), [])\n    .concat($predefinedTags)\n    .concat(tags)\n    .reduce(\n      (acc, tag) => (acc.indexOf(tag) === -1 ? acc.concat([tag]) : acc),\n      []\n    );\n\n  function onKeyPress({ charCode }) {\n    if (charCode === 13) {\n      dispatch(\"add\", newTag);\n      newTag = \"\";\n    }\n  }\n</script>\n\n<div\n  class=\"{className} w-72 p-4 bg-white border-2 border-gray-600 rounded shadow\"\n>\n  <button\n    class=\"absolute w-5 top-2 right-2 text-gray-500 order-0 hover:text-gray-800 active:text-gray-500 focus:outline-none\"\n    on:click={() => dispatch(\"close\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n      /></svg\n    >\n  </button>\n\n  <h3 class=\"mb-1 font-semibold text-gray-700\">Labels</h3>\n  <input\n    type=\"text\"\n    placeholder=\"Type in a new tag\"\n    class=\"w-full outline-none mb-4 px-3 py-1 bg-white text-sm text-gray-700 rounded border border-gray-400 hover:border-gray-500 focus:border-red-300\"\n    on:keypress={onKeyPress}\n    bind:value={newTag}\n  />\n\n  <div class=\"flex flex-row flex-wrap\">\n    {#each allTags as tag}\n      {#if tags.includes(tag)}\n        <TagBadge\n          class=\"mb-2 mr-2 text-red-600\"\n          viewOnly={false}\n          {tag}\n          on:click={() => dispatch(\"remove\", tag)}\n        />\n      {:else}\n        <TagBadge\n          class=\"mb-2 mr-2\"\n          viewOnly={false}\n          {tag}\n          on:click={() => dispatch(\"add\", tag)}\n        />\n      {/if}\n    {/each}\n  </div>\n</div>\n","<script>\n  import { updateThreadTags, tagChanges } from \"../lib/tagging\";\n\n  import mailboxes from \"../stores/mailboxes\";\n  import url, { selectedMailbox, selectedThread } from \"../stores/url\";\n  import selectedThreads from \"../stores/selected_threads\";\n  import threads from \"../stores/threads\";\n\n  import ToolbarButton from \"./ToolbarButton.svelte\";\n  import TagPicker from \"./TagPicker.svelte\";\n\n  export let disabled = false;\n  let showTagPicker = false;\n\n  $: tags = [\n    ...$threads\n      .filter(({ thread }) => $selectedThreads.includes(thread))\n      .reduce((acc, { tags }) => {\n        tags.forEach((tag) => acc.add(tag));\n        return acc;\n      }, new Set()),\n  ].sort((a, b) => a.localeCompare(b));\n\n  async function move(folder) {\n    for (const thread of $selectedThreads) {\n      const { changes } = tagChanges($mailboxes, $selectedMailbox, folder);\n\n      if ($selectedThread === thread) {\n        url.deselectThread();\n      }\n      threads.remove(thread);\n\n      await updateThreadTags(thread, [...changes, \"-unread\"]);\n      selectedThreads.toggle({ thread });\n    }\n  }\n\n  async function addTag({ detail }) {\n    for (const thread of $selectedThreads) {\n      await updateThreadTags(thread, [`+${detail}`]);\n    }\n  }\n\n  async function removeTag({ detail }) {\n    for (const thread of $selectedThreads) {\n      await updateThreadTags(thread, [`-${detail}`]);\n    }\n  }\n</script>\n\n<div class=\"h-8 ml-0 mr-4 sm:ml-4 flex flex-row relative\">\n  <ToolbarButton\n    variant=\"toolbar\"\n    tooltip=\"Move to archive\"\n    class=\"mr-1\"\n    {disabled}\n    on:click={() => move(\"archive\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      enable-background=\"new 0 0 24 24\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current h-full\"\n      ><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g\n        ><path\n          d=\"M20,2H4C3,2,2,2.9,2,4v3.01C2,7.73,2.43,8.35,3,8.7V20c0,1.1,1.1,2,2,2h14c0.9,0,2-0.9,2-2V8.7c0.57-0.35,1-0.97,1-1.69V4 C22,2.9,21,2,20,2z M15,14H9v-2h6V14z M20,7H4V4h16V7z\"\n        /></g\n      ></svg\n    >\n  </ToolbarButton>\n\n  <ToolbarButton\n    variant=\"toolbar\"\n    tooltip=\"Move to spam\"\n    class=\"mr-1\"\n    {disabled}\n    on:click={() => move(\"spam\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"h-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n      /></svg\n    >\n  </ToolbarButton>\n  <ToolbarButton\n    variant=\"toolbar\"\n    tooltip=\"Move to trash\"\n    class=\"mr-1\"\n    {disabled}\n    on:click={() => move(\"trash\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"h-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n      /></svg\n    >\n  </ToolbarButton>\n\n  <ToolbarButton\n    variant=\"toolbar\"\n    tooltip=\"Tag\"\n    {disabled}\n    on:click={() => (showTagPicker = true)}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"h-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n      /></svg\n    >\n  </ToolbarButton>\n\n  {#if showTagPicker}\n    <TagPicker\n      class=\"absolute left-1 top-8 z-5\"\n      {tags}\n      on:add={addTag}\n      on:remove={removeTag}\n      on:close={() => (showTagPicker = false)}\n    />\n  {/if}\n</div>\n","<script>\n  import { threadsPerPage } from \"../config\";\n  import { currentPage, hasMore } from \"../stores/threads\";\n</script>\n\n<div class=\"flex flex-row items-center ml-auto text-gray-300\">\n  <button\n    disabled={$currentPage == 0}\n    class=\"border-0 rounded hover:bg-gray-700 active:bg-gray-800 focus:outline-none disabled:opacity-50 disabled:bg-transparent\"\n    on:click={() => currentPage.update((page) => page - 1)}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current w-7\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n      /></svg\n    >\n  </button>\n  <span class=\"font-semibold px-3\">{$currentPage + 1}</span>\n  <button\n    disabled={!$hasMore}\n    class=\"border-0 rounded hover:bg-gray-700 active:bg-gray-800 focus:outline-none disabled:opacity-50 disabled:bg-transparent\"\n    on:click={() => currentPage.update((page) => page + 1)}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current w-7\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n      /></svg\n    >\n  </button>\n</div>\n","<script>\n  let className = \"\";\n  export { className as class };\n  export let checked = false;\n\n  $: borderClass = checked ? \"border-gray-500\" : \"border-gray-300\";\n</script>\n\n<div\n  class=\"flex-shrink-0 w-5 h-5 rounded border-2 text-gray-500 {borderClass} {className}\"\n  on:click|stopPropagation|preventDefault\n>\n  {#if checked}\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current w-full\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n      /></svg\n    >\n  {/if}\n</div>\n","<script>\n  import url, { selectedMailbox, selectedThread } from \"../stores/url\";\n  import threads, { currentPage } from \"../stores/threads\";\n  import selectedThreads from \"../stores/selected_threads\";\n\n  import Checkbox from \"./Checkbox.svelte\";\n  import TagBadge from \"./TagBadge.svelte\";\n\n  export let mailbox;\n\n  $: threads.fetch(mailbox, $currentPage);\n\n  function unreadClasses({ tags }) {\n    return tags.includes(\"unread\")\n      ? \"bg-gray-50 text-red-500 visited:text-red-500\"\n      : \"bg-gray-100 text-gray-600 visited:text-gray-600\";\n  }\n\n  function commonTag(tag) {\n    return [\n      \"inbox\",\n      \"sent\",\n      \"trash\",\n      \"archive\",\n      \"personal\",\n      \"draft\",\n      \"unread\",\n    ].includes(tag);\n  }\n</script>\n\n{#each $threads as thread (thread.thread)}\n  <a\n    href={`/${$selectedMailbox}/${thread.thread}`}\n    data-thread={thread.thread}\n    class={`py-2 flex flex-wrap sm:flex-nowrap sm:flex-row items-center border-b hover:bg-gray-200 ${unreadClasses(\n      thread\n    )} ${$selectedThread === thread.thread ? \"bg-red-100 font-semibold\" : \"\"}`}\n    on:click|preventDefault={() =>\n      url.selectThread($selectedMailbox, thread.thread)}\n  >\n    <Checkbox\n      class=\"ml-3\"\n      checked={$selectedThreads.includes(thread.thread)}\n      on:click={() => selectedThreads.toggle(thread)}\n    />\n    <span class=\"px-3 w-22 sm:w-28 truncate text-xs sm:text-base\"\n      >{thread.date_relative}</span\n    >\n    <span class=\"pr-3 flex-1 sm:flex-none sm:w-40 truncate text-xs sm:text-base\"\n      >{thread.authors}</span\n    >\n    <span\n      class={`sm:truncate w-full sm:flex-1 px-3 pt-2 sm:pt-0 ${\n        thread.tags.includes(\"unread\") ? \"text-red-500\" : \"text-gray-800\"\n      }`}\n    >\n      {thread.subject}\n    </span>\n    <div class=\"hidden sm:inline-flex px-3\">\n      {#each thread.tags as tag}\n        {#if !commonTag(tag)}\n          <TagBadge class=\"mr-2\" {tag} />\n        {/if}\n      {/each}\n    </div>\n  </a>\n{/each}\n","export function getTextContent(body, text = []) {\n  if (body[\"content-type\"].startsWith(\"multipart\")) {\n    body.content.forEach((child) => getTextContent(child, text));\n  } else if (body[\"content-type\"] === \"text/plain\") {\n    text.push(body.content);\n  }\n\n  return text;\n}\n\nexport function getAttachments(body, attachments = []) {\n  if (body[\"content-type\"].startsWith(\"multipart\")) {\n    body.content.forEach((child) => getAttachments(child, attachments));\n  } else if (body[\"content-disposition\"] === \"attachment\") {\n    attachments.push(body);\n  }\n\n  return attachments;\n}\n\nexport function quotedText(body) {\n  return getTextContent(body)\n    .map((content) => content.replace(/^/gm, \"> \"))\n    .join(\"\");\n}\n\nexport function parseMessageBody(\n  body,\n  content = { text: [], attachments: [], html: [] }\n) {\n  if (body[\"content-type\"].startsWith(\"multipart\")) {\n    body.content.forEach((child) => parseMessageBody(child, content));\n  } else if (body[\"content-type\"] === \"text/plain\") {\n    const blocks = parseTextContent(body.content);\n    content.text.push(...blocks);\n  } else if (body[\"content-type\"] === \"text/html\") {\n    content.html.push(body);\n  } else if (body[\"content-disposition\"] === \"attachment\") {\n    content.attachments.push(body);\n  }\n\n  return content;\n}\n\nexport function parseTextContent(text) {\n  const blocks = [];\n  let curBlock = null;\n\n  text.split(\"\\n\").forEach((line) => {\n    const lType = lineType(line);\n    if (curBlock?.type !== lType) {\n      if (curBlock) blocks.push(curBlock);\n      curBlock = { type: lType, content: \"\" };\n    }\n\n    if (lType === \"quote\" || lType === \"deepquote\") {\n      curBlock.content += `${line.replace(/^>\\s?/, \"\")}\\n`;\n    } else {\n      curBlock.content += `${line}\\n`;\n    }\n  });\n  blocks.push(curBlock);\n\n  return blocks;\n}\n\nfunction lineType(line) {\n  if (line.startsWith(\"> >\")) return \"deepquote\";\n  if (line.startsWith(\">\")) return \"quote\";\n\n  return \"text\";\n}\n","export function linkify(text, matchFn) {\n  const rx = /http[s]?:\\/\\/\\S*\\b[=/]?/g;\n\n  const items = [];\n  let start = 0;\n  text.replaceAll(rx, (match, offset) => {\n    items.push(text.substring(start, offset));\n    try {\n      items.push(new URL(match));\n    } catch (e) {\n      items.push(match);\n      console.error(`failed to linkify: ${e.message}`);\n    }\n    start = offset + match.length;\n  });\n\n  items.push(text.substring(start, text.length));\n  return items;\n}\n","<script>\n  export let content;\n  export let wrap = 80;\n\n  let folded = true;\n</script>\n\n<a\n  href=\"#fold\"\n  style={`width: ${wrap}ch;`}\n  class=\"block whitespace-pre-line break-words text-gray-500 border-l-8 border-gray-400 pl-3\"\n  on:click|preventDefault={() => (folded = !folded)}\n>\n  {#if folded}\n    <span class=\"text-red-500 font-semibold\">...</span>\n  {:else}\n    {content}\n  {/if}\n</a>\n","<script>\n  import ApiClient from \"../client\";\n  import { parseMessageBody } from \"../lib/email\";\n  import { linkify } from \"../lib/linkify\";\n\n  import DeepquoteBlock from \"./DeepquoteBlock.svelte\";\n\n  export let body;\n  export let messageId;\n  export let wrap = 80;\n\n  $: content = parseMessageBody(body);\n  $: console.debug(\n    `selected message ${window.atob(messageId)},`,\n    \"body:\",\n    body,\n    \"parsed content:\",\n    content\n  );\n</script>\n\n{#if content.text.length > 0}\n  {#each content.text as block}\n    {#if block.type === \"quote\"}\n      <p\n        style={`max-width: ${wrap}ch;`}\n        class=\"whitespace-pre-line break-words text-gray-600 border-l-8 border-gray-400 pl-3 w-full\"\n      >\n        {block.content}\n      </p>\n    {:else if block.type === \"deepquote\"}\n      <DeepquoteBlock content={block.content} />\n    {:else}\n      <p\n        style={`max-width: ${wrap}ch;`}\n        class=\"whitespace-pre-line break-words w-full\"\n      >\n        {#each linkify(block.content) as text}\n          {#if text instanceof URL}\n            <a\n              href={text.toString()}\n              class=\"inline text-gray-600 hover:text-red-600\"\n              target=\"_blank\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                class=\"inline fill-current h-5\"\n                ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n                  d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n                /></svg\n              >\n              <span class=\"text-sm\">{text.hostname}</span>\n            </a>\n          {:else}\n            {text}\n          {/if}\n        {/each}\n      </p>\n    {/if}\n  {/each}\n{:else}\n  <p class=\"text-lg mb-4\">\n    Email has no plaintext content. Presenting converted html content.\n  </p>\n  <div>\n    {#if content.html.length > 0}\n      {#each content.html as block}\n        {#await ApiClient.default.w3mRender(messageId, block.id) then textContent}\n          <p\n            style={`max-width: ${wrap}ch;`}\n            class=\"whitespace-pre-line break-words w-full\"\n          >\n            {textContent.text}\n          </p>\n        {/await}\n      {/each}\n    {/if}\n  </div>\n{/if}\n\n<p class=\"mt-3 flex flex-row\">\n  {#if content.html.length > 0}\n    {#each content.html as block}\n      <a\n        href={`/api/messages/${messageId}/parts/${block.id}`}\n        class=\"block mr-3 text-red-400 hover:text-red-500 font-semibold underline\"\n        target=\"_blank\"\n        data-html-body=\"true\">Open HTML</a\n      >\n    {/each}\n  {/if}\n\n  <a\n    href={`/api/messages/${messageId}/parts/0`}\n    class=\"block text-red-400 hover:text-red-500 font-semibold underline\"\n    target=\"_blank\"\n    data-html-body=\"true\">Show RAW</a\n  >\n</p>\n\n{#if content.attachments.length > 0}\n  <div class=\"flex flex-row flex-wrap mt-3\">\n    {#each content.attachments as attach}\n      <a\n        href={`/api/messages/${messageId}/parts/${attach.id}`}\n        download={attach.filename}\n        class=\"flex flex-row items-center mr-2 mb-2 p-3 rounded border-2 border-gray-500 text-gray-600 font-semibold hover:border-gray-700 hover:text-gray-800 visited:text-gray-600 hover:no-underline max-w-xs\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current mr-1 w-5\"\n          ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n            d=\"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n          /></svg\n        >\n        <span class=\"truncate\">{attach.filename}</span></a\n      >\n    {/each}\n  </div>\n{/if}\n","<script>\n  let className = \"\";\n  export { className as class };\n\n  export let address;\n  export let removed = false;\n\n  $: [, name, mail] = address.match(/(.*?)\\s(\\<.*?\\>)/) || [null, address];\n</script>\n\n<span class={`${className} ${removed ? \"line-through\" : \"\"}`}>\n  {name}\n\n  {#if mail}\n    <span class=\"hidden sm:inline text-gray-600 pl-1\">{mail}</span>\n  {/if}\n</span>\n","<script>\n  import FormattedAddress from \"./FormattedAddress.svelte\";\n  import TagBadge from \"./TagBadge.svelte\";\n\n  export let message;\n</script>\n\n<div class=\"p-3\">\n  <p class=\"mb-2\">\n    <span class=\"inline-flex w-10 text-gray-500\">From: </span>\n    <FormattedAddress address={message.headers.From} />\n  </p>\n  {#if message.headers.To}\n  <p class=\"mb-2 text-gray-500\">\n    <span class=\"inline-flex w-10\">To: </span>\n    {#each message.headers.To.split(\", \") as address}\n      <FormattedAddress class=\"mr-3\" {address} />\n    {/each}\n  </p>\n  {/if}\n  {#if message.headers.Cc}\n    <p class=\"mb-2 text-gray-500\">\n      <span class=\"inline-flex w-10\">Cc: </span>\n\n      {#each message.headers.Cc.split(\", \") as address}\n        <FormattedAddress class=\"mr-3\" {address} />\n      {/each}\n    </p>\n  {/if}\n\n  <h3 class=\"mb-3\">\n    {message.headers.Subject}\n  </h3>\n\n  <div class=\"flex\">\n    <div\n      class=\"inline-flex flex-shrink-0 items-center mr-4 text-gray-600 text-sm\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-4 fill-current mr-1\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n        /><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" /></svg\n      >\n      <span class=\"hidden sm:inline\">{new Date(message.headers.Date)}</span>\n      <span class=\"sm:hidden\">{message.date_relative}</span>\n    </div>\n\n    <div class=\"flex flex-row flex-wrap\">\n      {#each message.tags as tag}\n        <TagBadge class=\"m-1\" {tag} />\n      {/each}\n    </div>\n  </div>\n</div>\n","import { writable } from \"svelte/store\";\nimport ApiClient from \"../client\";\n\nimport { quotedText, getAttachments, getTextContent } from \"../lib/email\";\n\nconst { subscribe, set, update } = writable(null);\n\nfunction create() {\n  set({ to: [], cc: [], subject: \"\", body: \"\", headers: {}, attachments: [] });\n}\n\nasync function reply(messageId, replyTo) {\n  const reply = await ApiClient.default.replyToMessage(messageId, replyTo);\n\n  const { To, Cc, Subject, ...rest } = reply[\"reply-headers\"];\n  const { headers, body } = reply.original;\n\n  const content = body.map((item) => quotedText(item)).join(\"\\n\");\n  set({\n    to: To.split(\", \"),\n    cc: Cc?.split(\", \") || [],\n    subject: Subject,\n    headers: { ...rest },\n    body: content,\n    originalHeaders: headers,\n    reply: true,\n    attachments: [],\n  });\n}\n\nfunction forward({ id, body, headers }) {\n  const content = body.map((item) => quotedText(item)).join(\"\\n\");\n  const attachments = [];\n  body.forEach((item) => {\n    getAttachments(item).forEach((attach) =>\n      attachments.push({\n        id: `${id}:${attach.id}`,\n        name: attach.filename,\n        size: attach[\"content-length\"],\n        type: attach[\"content-type\"],\n      })\n    );\n  });\n  set({\n    to: [],\n    cc: [],\n    subject: `Fwd: ${headers.Subject}`,\n    headers: {},\n    body: content,\n    originalHeaders: headers,\n    reply: true,\n    attachments,\n  });\n}\n\nfunction edit({ id, body, headers }) {\n  const { To, Cc, Subject, ...rest } = headers;\n\n  const content = body.map((item) => getTextContent(item)).join(\"\\n\");\n  const attachments = [];\n  body.forEach((item) => {\n    getAttachments(item).forEach((attach) =>\n      attachments.push({\n        id: `${id}:${attach.id}`,\n        name: attach.filename,\n        size: attach[\"content-length\"],\n        type: attach[\"content-type\"],\n      })\n    );\n  });\n  set({\n    to: To.split(\", \"),\n    cc: Cc?.split(\", \") || [],\n    subject: Subject,\n    headers: { ...rest },\n    body: content,\n    originalHeaders: headers,\n    reply: false,\n    attachments,\n  });\n}\n\nfunction setField(updates) {\n  update((message) => ({ ...message, ...updates }));\n}\n\nfunction setBody({ body }) {\n  update((message) => ({ ...message, body }));\n}\n\nfunction destroy() {\n  set(null);\n}\n\nexport default {\n  subscribe,\n  create,\n  reply,\n  forward,\n  edit,\n  setField,\n  set: setBody,\n  destroy,\n};\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { updateTags } from \"../lib/tagging\";\n\n  import ApiClient from \"../client\";\n  import { selectedMailbox, selectedThread } from \"../stores/url\";\n  import newMessage from \"../stores/new_message\";\n\n  import ToolbarButton from \"./ToolbarButton.svelte\";\n  import TagPicker from \"./TagPicker.svelte\";\n\n  export let message;\n\n  const dispatch = createEventDispatcher();\n  let showTagPicker = false;\n\n  function markUnread() {\n    updateTags($selectedThread, message.id, [\"+unread\"]);\n  }\n\n  function move(folder) {\n    dispatch(\"move\", folder);\n  }\n\n  function addTag({ detail }) {\n    updateTags($selectedThread, message.id, [`+${detail}`]);\n  }\n\n  function removeTag({ detail }) {\n    updateTags($selectedThread, message.id, [`-${detail}`]);\n  }\n\n  async function reply(replyTo) {\n    newMessage.reply(message.id, replyTo);\n  }\n\n  async function forward() {\n    newMessage.forward(message);\n  }\n\n  async function edit() {\n    newMessage.edit(message);\n  }\n</script>\n\n<div class=\"relative flex flex-wrap sm:flex-row px-3 py-2 border-b border-t\">\n  <ToolbarButton\n    tooltip=\"Mark as unread\"\n    tooltipPosition=\"left\"\n    class=\"mr-3 py-1\"\n    on:click={markUnread}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n        d=\"M18.83 7h-2.6L10.5 4 4 7.4V17c-1.1 0-2-.9-2-2V7.17c0-.53.32-1.09.8-1.34L10.5 2l7.54 3.83c.43.23.73.7.79 1.17zM20 8H7c-1.1 0-2 .9-2 2v9c0 1.1.9 2 2 2h13c1.1 0 2-.9 2-2v-9c0-1.1-.9-2-2-2zm0 3.67L13.5 15 7 11.67V10l6.5 3.33L20 10v1.67z\"\n      /></svg\n    >\n  </ToolbarButton>\n\n  {#if $selectedMailbox !== \"search\"}\n    <ToolbarButton\n      tooltip=\"Move to archive\"\n      class=\"mr-1 py-1\"\n      on:click={() => move(\"archive\")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        enable-background=\"new 0 0 24 24\"\n        viewBox=\"0 0 24 24\"\n        class=\"fill-current w-full\"\n        ><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g\n          ><path\n            d=\"M20,2H4C3,2,2,2.9,2,4v3.01C2,7.73,2.43,8.35,3,8.7V20c0,1.1,1.1,2,2,2h14c0.9,0,2-0.9,2-2V8.7c0.57-0.35,1-0.97,1-1.69V4 C22,2.9,21,2,20,2z M15,14H9v-2h6V14z M20,7H4V4h16V7z\"\n          /></g\n        ></svg\n      >\n    </ToolbarButton>\n    <ToolbarButton\n      tooltip=\"Move to inbox\"\n      class=\"mr-1 py-1\"\n      on:click={() => move(\"inbox\")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"fill-current w-full\"\n        ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n          d=\"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z\"\n        /></svg\n      >\n    </ToolbarButton>\n    <ToolbarButton\n      tooltip=\"Move to spam\"\n      class=\"mr-1 py-1\"\n      on:click={() => move(\"spam\")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n        /></svg\n      >\n    </ToolbarButton>\n    <ToolbarButton\n      tooltip=\"Move to trash\"\n      class=\"mr-3 py-1\"\n      on:click={() => move(\"trash\")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n        /></svg\n      >\n    </ToolbarButton>\n  {/if}\n\n  <div class=\"py-1\">\n    <ToolbarButton\n      tooltip=\"Tag\"\n      class=\"mr-3\"\n      on:click={() => (showTagPicker = true)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n        /></svg\n      >\n    </ToolbarButton>\n\n    {#if showTagPicker}\n      <TagPicker\n        class=\"absolute left-1/2 transform sm:transform-none -translate-x-1/2 sm:left-10 top-14 z-10\"\n        tags={message.tags}\n        on:add={addTag}\n        on:remove={removeTag}\n        on:close={() => (showTagPicker = false)}\n      />\n    {/if}\n  </div>\n\n  <div class=\"flex flex-row py-1 sm:pt-0 sm:ml-auto\">\n    {#if message.tags.includes(\"draft\")}\n      <ToolbarButton tooltip=\"Edit\" class=\"mr-1\" on:click={edit}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          class=\"w-full fill-current\"\n          ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n            d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n          /></svg\n        >\n      </ToolbarButton>\n    {/if}\n    <ToolbarButton\n      tooltip=\"Reply\"\n      class=\"mr-1\"\n      on:click={() => reply(\"sender\")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\"\n        /></svg\n      >\n    </ToolbarButton>\n    <ToolbarButton\n      tooltip=\"Reply all\"\n      class=\"mr-1\"\n      on:click={() => reply(\"all\")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M7 8V5l-7 7 7 7v-3l-4-4 4-4zm6 1V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\"\n        /></svg\n      >\n    </ToolbarButton>\n    <ToolbarButton tooltip=\"Forward\" tooltipPosition=\"right\" on:click={forward}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M12 8V4l8 8-8 8v-4H4V8z\"\n        /></svg\n      >\n    </ToolbarButton>\n  </div>\n</div>\n","<script>\n  import { updateTags, tagChanges } from \"../lib/tagging\";\n  import url, { selectedMailbox, selectedThread } from \"../stores/url\";\n  import mailboxes from \"../stores/mailboxes\";\n  import selectedMessage from \"../stores/message\";\n  import thread, { findOtherMessage } from \"../stores/thread\";\n  import threads from \"../stores/threads\";\n\n  import BodyItem from \"./BodyItem.svelte\";\n  import MessageInfo from \"./MessageInfo.svelte\";\n  import MessageToolbar from \"./MessageToolbar.svelte\";\n\n  export let message;\n\n  function selectNextThread() {\n    const idx = $threads.findIndex(({ thread }) => thread === $selectedThread);\n    const nextThread = $threads[idx + 1];\n    if (nextThread) {\n      url.selectThread($selectedMailbox, nextThread.thread);\n    } else {\n      url.deselectThread();\n    }\n  }\n\n  export function move(folder) {\n    const { changes, fromTags } = tagChanges(\n      $mailboxes,\n      $selectedMailbox,\n      folder\n    );\n    updateTags($selectedThread, message.id, changes);\n\n    const other = findOtherMessage($thread, message.id, fromTags);\n    if (other) {\n      selectedMessage.selectMessage(other.id);\n    } else {\n      selectNextThread();\n    }\n  }\n</script>\n\n<div class=\"relative bg-gray-100\">\n  <MessageInfo {message} />\n\n  <MessageToolbar {message} on:move={({ detail }) => move(detail)} />\n</div>\n\n<div class=\"p-5 border-b-2 border-gray-200\">\n  {#each message.body as body (body.id)}\n    <BodyItem {body} messageId={window.btoa(message.id)} wrap=\"100\" />\n  {/each}\n</div>\n","<script>\n  import { markAsRead } from \"../lib/tagging\";\n\n  import { selectedThread } from \"../stores/url\";\n  import selectedMessage from \"../stores/message\";\n\n  import FormattedAddress from \"./FormattedAddress.svelte\";\n\n  export let message;\n  export let level;\n\n  function selectMessage() {\n    selectedMessage.selectMessage(message.id);\n    markAsRead($selectedThread, message);\n  }\n</script>\n\n<div\n  class=\"p-3 flex flex-row justify-between items-center bg-gray-100 border-b-2 border-gray-200 cursor-pointer\"\n  on:click={() => selectMessage()}\n>\n  <div\n    class=\"flex flex-row items-center\"\n    style={`padding-left: ${10 * level}px;`}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-5 fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n      /></svg\n    >\n    <FormattedAddress\n      address={message.headers.From}\n      removed={message.tags.includes(\"trash\")}\n    />\n  </div>\n  <span class=\"text-gray-500 text-sm hidden sm:inline\">{message.headers.Date}</span>\n  <span class=\"text-gray-500 text-sm sm:hidden\">{message.date_relative}</span>\n</div>\n","<script>\n  import Message from \"./Message.svelte\";\n  import CollapsedMessage from \"./CollapsedMessage.svelte\";\n  import selectedMessage from \"../stores/message\";\n\n  export let thread;\n  export let activeMessage;\n  export let level = 0;\n</script>\n\n<div>\n  {#if thread}\n    {#each thread as [message, subthread]}\n      <div data-message={message.id}>\n        {#if message.id !== $selectedMessage}\n          <CollapsedMessage {message} {level} />\n        {:else}\n          <Message {message} bind:this={activeMessage} />\n        {/if}\n      </div>\n\n      <svelte:self thread={subthread} level={level + 1} bind:activeMessage />\n    {/each}\n  {/if}\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  import ApiClient from \"../client\";\n\n  export let id;\n  export let value;\n\n  const dispatch = createEventDispatcher();\n  let input;\n  let completions;\n  let focused = false;\n  let selectedOptionIdx = -1;\n  let completeOptions = [];\n\n  $: classes = focused\n    ? \"border-red-300\"\n    : \"border-gray-400 hover:border-gray-500\";\n\n  export function focus() {\n    input.focus();\n  }\n\n  function formattedAddress(address) {\n    const matches = /(.*)\\s\\<(.*)\\>/.exec(address);\n    if (!matches) return address;\n\n    return matches[1];\n  }\n\n  function selectOption(idx) {\n    if (idx !== -1) {\n      dispatch(\"change\", [...value, completeOptions[idx]]);\n    }\n    input.value = null;\n    selectedOptionIdx = -1;\n    completeOptions = [];\n  }\n\n  function completeOption() {\n    if (selectedOptionIdx === -1) {\n      if (input.value.length > 0) {\n        dispatch(\"change\", [...value, input.value]);\n      }\n\n      input.value = null;\n      selectedOptionIdx = -1;\n      completeOptions = [];\n    } else {\n      selectOption(selectedOptionIdx);\n    }\n  }\n\n  function onKeyUp(e) {\n    const { key, target } = e;\n\n    if (key === \"ArrowDown\") {\n      selectedOptionIdx += 1;\n      if (selectedOptionIdx >= completeOptions.length) {\n        selectedOptionIdx = 0;\n      }\n      completions.children[selectedOptionIdx].scrollIntoView({\n        block: \"nearest\",\n      });\n    } else if (key === \"ArrowUp\") {\n      selectedOptionIdx -= 1;\n      if (selectedOptionIdx < 0) {\n        selectedOptionIdx = completeOptions.length - 1;\n      }\n      completions.children[selectedOptionIdx].scrollIntoView({\n        block: \"nearest\",\n      });\n    } else if (key === \"Enter\") {\n      completeOption();\n    } else if (key === \"Backspace\") {\n      if (input.value.length > 0) return;\n      dispatch(\"change\", value.slice(0, value.length - 1));\n    }\n  }\n\n  function onKeyDown({ key }) {\n    if (key === \"Tab\") {\n      completeOption();\n    }\n  }\n\n  let timer;\n  const fetchCompletions = ({ target }) => {\n    clearTimeout(timer);\n    timer = setTimeout(async () => {\n      if (target.value.length <= 2) return;\n      const addresses = await ApiClient.default.addresses(target.value);\n      completeOptions = addresses.map((addr) => addr[\"name-addr\"]);\n    }, 500);\n  };\n</script>\n\n<div\n  class=\"relative flex-1 flex flex-row flex-wrap px-3 p-1 bg-white text-gray-700 rounded border {classes}\"\n>\n  {#each value as address}\n    <span\n      class=\"mr-2 my-1 px-2 py-1 text-xs rounded bg-gray-600 text-white truncate max-w-md\"\n      >{formattedAddress(address)}</span\n    >\n  {/each}\n\n  <input\n    {id}\n    type=\"text\"\n    class=\"flex-1 outline-none\"\n    bind:this={input}\n    on:focus={() => (focused = true)}\n    on:blur={() => (focused = false)}\n    on:keyup={onKeyUp}\n    on:keydown={onKeyDown}\n    on:input={fetchCompletions}\n  />\n\n  {#if completeOptions.length > 0}\n    <ul\n      tabindex=\"-1\"\n      class=\"absolute left-0 right-0 bottom-0 max-h-40 overflow-y-auto block flex-col bg-white border-2 border-gray-600 z-10 transform translate-y-full overflow-x-hidden rounded\"\n      size=\"5\"\n      bind:this={completions}\n      on:mouseout={() => (selectedOptionIdx = -1)}\n    >\n      {#each completeOptions as option, idx}\n        <li\n          class={`block truncate px-4 py-2 cursor-pointer ${\n            idx === selectedOptionIdx ? \"bg-red-500 text-white\" : \"\"\n          }`}\n          on:click={() => selectOption(idx)}\n          on:mouseover={() => (selectedOptionIdx = idx)}\n        >\n          {option}\n        </li>\n      {/each}\n    </ul>\n  {/if}\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  export let blocks = [];\n\n  const dispatch = createEventDispatcher();\n  let content = blocks;\n\n  function beforeInput(e) {\n    const ranges = e.getTargetRanges();\n    if (ranges.length === 0) return;\n\n    const { startContainer, startOffset, endOffset } = ranges[0];\n    const node = startContainer.parentNode;\n\n    if (node.dataset.type === \"text\" && e.inputType === \"insertFromPaste\") {\n      const text = e.dataTransfer.getData(\"text\");\n      if (text.includes(\"\\n\")) {\n        e.preventDefault();\n        node.innerHTML =\n          startContainer.wholeText.slice(0, startOffset) +\n          text +\n          startContainer.wholeText.slice(endOffset);\n        input(e);\n      }\n      return;\n    }\n\n    if (node.dataset.type !== \"quote\") return;\n\n    if (e.inputType === \"insertParagraph\") {\n      e.preventDefault();\n      node.innerHTML = startContainer.wholeText.slice(0, startOffset);\n      const otherQuote = `\n<p class=\"whitespace-pre-wrap break-words\" data-type=\"text\">\\n</p>\n<p class=\"whitespace-pre-wrap break-words text-gray-600 border-l-8 border-gray-400 pl-3\" data-type=\"quote\">${startContainer.wholeText.slice(\n        startOffset + 1\n      )}</p>`;\n      node.insertAdjacentHTML(\"afterend\", otherQuote);\n      window.getSelection().collapse(node.nextSibling.nextSibling);\n    } else {\n      if (!e.inputType.startsWith(\"deleteContent\")) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  function input({ target }) {\n    const newBlocks = [];\n    for (const el of target.querySelectorAll(\"p\")) {\n      const content =\n        el.dataset.type === \"quote\"\n          ? el.textContent.replace(/^/gm, \"> \")\n          : el.textContent;\n      newBlocks.push({\n        type: el.dataset.type,\n        content: content + (content.endsWith(\"\\n\") ? \"\" : \"\\n\"),\n      });\n    }\n    dispatch(\"input\", newBlocks);\n  }\n</script>\n\n<div\n  contenteditable=\"true\"\n  style=\"width: 85ch;\"\n  class=\"max-w-full h-full sm:h-80 border rounded p-3 outline-none border-gray-400 hover:border-gray-500 focus:border-red-300 overflow-y-auto\"\n  on:input={input}\n  on:beforeinput={beforeInput}\n>\n  {#each content as block}\n    {#if block.type === \"quote\"}\n      <p\n        class=\"whitespace-pre-wrap break-words text-gray-600 border-l-8 border-gray-400 pl-3\"\n        data-type={block.type}\n      >\n        {block.content.replace(/^>\\s?/gm, \"\")}\n      </p>\n    {:else}\n      <p class=\"whitespace-pre-wrap break-words\" data-type={block.type}>\n        {block.content}\n      </p>\n    {/if}\n  {/each}\n</div>\n","<script>\n  import { onMount, createEventDispatcher } from \"svelte\";\n\n  import ApiClient from \"../client\";\n  import { parseTextContent } from \"../lib/email\";\n\n  import { address, name } from \"../stores/mailboxes\";\n  import newMessage from \"../stores/new_message\";\n  import { selectedThread } from \"../stores/url\";\n  import thread from \"../stores/thread\";\n\n  import AddressField from \"./AddressField.svelte\";\n  import TextEditor from \"./TextEditor.svelte\";\n\n  export let wrap = 80;\n\n  const dispatch = createEventDispatcher();\n  let submiting = false;\n  let error = null;\n  let toInput;\n  let fileInput;\n\n  onMount(() => {\n    toInput.focus();\n  });\n\n  async function saveMessage() {\n    error = null;\n    submiting = true;\n    try {\n      await ApiClient.default.saveMessage($newMessage);\n      submiting = false;\n      newMessage.destroy();\n    } catch (e) {\n      error = e.message;\n      submiting = false;\n    }\n  }\n\n  async function submitMessage() {\n    error = null;\n    submiting = true;\n    try {\n      await ApiClient.default.sendMessage($newMessage);\n      submiting = false;\n      newMessage.destroy();\n      thread.fetch($selectedThread);\n    } catch (e) {\n      error = e.message;\n      submiting = false;\n    }\n  }\n\n  let blocks = [];\n  if ($newMessage?.reply) {\n    const { Date, From } = $newMessage?.originalHeaders;\n    blocks.push(\n      { type: \"text\", content: \"\" },\n      { type: \"text\", content: `On ${Date}, ${From} wrote:` },\n      { type: \"quote\", content: $newMessage?.body }\n    );\n  } else {\n    const content = parseTextContent($newMessage?.body || \"\");\n    blocks.push(...content);\n  }\n\n  function onInput({ detail }) {\n    blocks = detail;\n    console.debug(\n      \"text content\",\n      \"blocks:\",\n      blocks,\n      \"content:\\n\",\n      blocks.map(({ content }) => content).join(\"\")\n    );\n    newMessage.setField({\n      body: blocks.map(({ content }) => content).join(\"\"),\n    });\n  }\n\n  function formatSize(size) {\n    if (size > 1000000) {\n      return `${(size / 1000000).toFixed(2)}MB`;\n    } else if (size > 1000) {\n      return `${(size / 1000).toFixed(2)}KB`;\n    } else {\n      return `${size}B`;\n    }\n  }\n\n  function attachFile() {\n    for (const file of fileInput.files) {\n      newMessage.setField({ attachments: [...$newMessage.attachments, file] });\n    }\n  }\n\n  function removeAttachment(index) {\n    newMessage.setField({\n      attachments: $newMessage.attachments.filter((_, idx) => idx !== index),\n    });\n  }\n\n  function fillBlock() {\n    const selection = document.getSelection();\n    if (selection.rangeCount === 0) return;\n\n    const { startContainer, startOffset } = selection.getRangeAt(0);\n    const node = startContainer.parentNode;\n    if (node.dataset.type !== \"text\") return;\n\n    const text = node.innerText.replaceAll(\"\\n\", \"\");\n    const words = text.split(/\\s/);\n    const lines = words.reduce(\n      (acc, word) => {\n        const line = acc[acc.length - 1];\n        if (line.length + word.length > wrap) {\n          acc.push(`${word} `);\n        } else {\n          acc[acc.length - 1] += `${word} `;\n        }\n\n        return acc;\n      },\n      [\"\"]\n    );\n\n    node.innerHTML = lines.join(\"\\n\").trim();\n    selection.collapse(\n      node.firstChild,\n      Math.min(node.firstChild.nodeValue.length, startOffset)\n    );\n  }\n\n  function onKeyDown(e) {\n    if (e.key === \"k\" && e.altKey) {\n      e.preventDefault();\n      dispatch(\"close\");\n    } else if (e.key === \"c\" && e.altKey) {\n      e.preventDefault();\n      submitMessage();\n    } else if (e.key === \"q\" && e.altKey) {\n      fillBlock();\n    }\n  }\n</script>\n\n<div\n  class=\"absolute top-0 sm:top-auto left-0 sm:left-auto bottom-0 sm:bottom-5 right-0 sm:right-5 flex flex-col bg-white shadow rounded border-2 border-gray-500 z-50\"\n  style=\"max-width: calc(85ch + 2rem)\"\n  on:keydown={onKeyDown}\n>\n  <div\n    class=\"px-3 py-2 flex flex-row items-center justify-between bg-gray-500 text-white\"\n  >\n    <span>{$newMessage?.subject || \"New message\"}</span>\n\n    <button\n      class=\"w-5 text-white hover:text-gray-200 active:text-gray-400 focus:outline-none\"\n      on:click={() => dispatch(\"close\")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n        /></svg\n      >\n    </button>\n  </div>\n\n  <div class=\"p-3 bg-gray-100 text-gray-500\">\n    <div class=\"flex flex-row items-center mb-2\">\n      <label class=\"w-20\" for=\"from\">From: </label>\n      <span class=\"text-gray-600\">\n        <strong class=\"font-semibold \">{$name}</strong>\n        &lt;{$address}&gt;\n      </span>\n    </div>\n\n    <div class=\"flex flex-row items-center mb-2\">\n      <label class=\"w-20 flex-shrink-0\" for=\"to\">To: </label>\n      <AddressField\n        id=\"to\"\n        value={$newMessage?.to}\n        on:change={({ detail }) => newMessage.setField({ to: detail })}\n        bind:this={toInput}\n      />\n    </div>\n\n    <div class=\"flex flex-row items-center mb-2\">\n      <label class=\"w-20 flex-shrink-0\" for=\"cc\">CC: </label>\n      <AddressField\n        id=\"cc\"\n        value={$newMessage?.cc}\n        on:change={({ detail }) => newMessage.setField({ cc: detail })}\n      />\n    </div>\n\n    <div class=\"flex flex-row items-center\">\n      <label class=\"w-20\" for=\"subject\">Subject: </label>\n      <input\n        type=\"text\"\n        id=\"subject\"\n        class=\"flex-1 outline-none px-3 py-1 bg-white text-gray-700 rounded border border-gray-400 hover:border-gray-500 focus:border-red-300\"\n        value={$newMessage?.subject}\n        on:change={({ target }) =>\n          newMessage.setField({ subject: target.value })}\n      />\n    </div>\n  </div>\n\n  <div class=\"p-3 flex-1 overflow-x-scroll\">\n    <TextEditor {blocks} on:input={(e) => onInput(e)} />\n  </div>\n\n  <div class=\"px-3 mb-3 flex flex-row justify-between items-center\">\n    <div class=\"flex flex-row flex-wrap\">\n      <input\n        multiple\n        type=\"file\"\n        class=\"hidden\"\n        bind:this={fileInput}\n        on:change={attachFile}\n      />\n      <button\n        class=\"h-10 p-2 mr-3 mb-1 rounded hover:border-red-500 bg-white text-gray-700 active:bg-red-300 focus:outline-none border\"\n        on:click={() => fileInput.click()}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          class=\"h-5 fill-current\"\n          ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n            d=\"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n          /></svg\n        >\n      </button>\n\n      {#if $newMessage?.attachments}\n        {#each $newMessage.attachments as attach, idx}\n          <button\n            style=\"max-width: 10rem;\"\n            class=\"flex h-10 border border-gray-600 p-2 mr-1 mb-1 rounded text-gray-600 text-sm hover:border-red-500 active:bg-red-300 focus:outline-none\"\n            on:click={() => removeAttachment(idx)}\n            ><strong class=\"mr-1 truncate\">{attach.name}</strong> ({formatSize(\n              attach.size\n            )})</button\n          >\n        {/each}\n      {/if}\n    </div>\n\n    <div class=\"flex flex-row items-center\">\n      {#if error}\n        <p class=\"mr-3 text-red-500 font-semibold\">Failed to send email</p>\n      {/if}\n\n      <button\n        class=\"h-10 p-2 mr-3 rounded hover:border-red-500 bg-white text-gray-700 active:bg-red-300 focus:outline-none border\"\n        disabled={submiting}\n        on:click={saveMessage}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          class=\"h-5 fill-current\"\n          ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n            d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n          /></svg\n        >\n      </button>\n\n      <button\n        class={`${\n          submiting\n            ? \"bg-red-300\"\n            : \"bg-red-500 hover:bg-red-600 active:bg-red-700\"\n        } focus:outline-none px-3 text-white h-10 rounded border-0 font-semibold`}\n        disabled={submiting}\n        on:click={submitMessage}\n      >\n        {submiting ? \"Sending\" : \"Send\"}\n      </button>\n    </div>\n  </div>\n</div>\n","<script>\n  import { onMount, tick } from \"svelte\";\n\n  import Tailwind from \"./Tailwind.svelte\";\n  import RefreshButton from \"./components/RefreshButton.svelte\";\n  import ComposeButton from \"./components/ComposeButton.svelte\";\n  import MenuButton from \"./components/MenuButton.svelte\";\n  import Mailboxes from \"./components/Mailboxes.svelte\";\n  import SearchField from \"./components/SearchField.svelte\";\n  import ThreadToolbar from \"./components/ThreadToolbar.svelte\";\n  import ThreadPages from \"./components/ThreadPages.svelte\";\n  import Threads from \"./components/Threads.svelte\";\n  import Thread from \"./components/Thread.svelte\";\n  import MessageForm from \"./components/MessageForm.svelte\";\n\n  import { mailboxTitles, refreshInterval } from \"./config\";\n  import { markAsRead } from \"./lib/tagging\";\n  import favicon from \"./lib/favicon\";\n\n  import url, {\n    selectedMailbox,\n    selectedThread,\n    searchTerms,\n  } from \"./stores/url\";\n  import mailboxes, { address } from \"./stores/mailboxes\";\n  import thread, {\n    findMessage,\n    findOtherMessage,\n    findLastMessage,\n  } from \"./stores/thread\";\n  import selectedMessage from \"./stores/message\";\n  import newMessage from \"./stores/new_message\";\n  import selectedThreads from \"./stores/selected_threads\";\n\n  let refreshing = false;\n  let threadList, messageList, searchField, activeMessage;\n  let sidebarCollapsed = true;\n  let searching = false;\n\n  onMount(() => {\n    setInterval(() => refreshMailboxes(), refreshInterval);\n  });\n\n  $: currentMailbox =\n    $searchTerms?.length > 0\n      ? { id: \"search\", terms: $searchTerms, tags: [] }\n      : $mailboxes.find(({ id }) => id === $selectedMailbox);\n  $: document.title =\n    currentMailbox?.unread > 0\n      ? `(${currentMailbox.unread}) ${mailboxTitles[$selectedMailbox]}`\n      : mailboxTitles[$selectedMailbox] || $searchTerms;\n  $: document.head.querySelector('link[rel=\"icon\"]').href = favicon(\n    currentMailbox?.unread > 0\n  );\n\n  $: if ($selectedThread) {\n    loadThread();\n    scrollToThread();\n  }\n  $: if ($selectedMessage)\n    scrollToMessage(findMessage($thread, $selectedMessage));\n\n  function refreshMailboxes() {\n    refreshing = true;\n    const start = Date.now();\n    mailboxes.updateUnreadCounters();\n    setTimeout(() => (refreshing = false), 1000 - Date.now() + start);\n  }\n\n  async function loadThread() {\n    const res = await thread.fetch($selectedThread);\n    await tick();\n\n    const messages = messageList.querySelectorAll(`div[data-message]`);\n    if (messages.length === 0) return;\n\n    const messageId = messages[messages.length - 1].dataset.message;\n    const message =\n      findOtherMessage($thread, null, [\"unread\"]) ||\n      findLastMessage($thread, null, [], [\"trash\"]) ||\n      findMessage(res, messageId);\n\n    selectedMessage.selectMessage(message.id);\n    markAsRead($selectedThread, message);\n  }\n\n  async function scrollToThread() {\n    await tick();\n    let interval;\n\n    const check = () => {\n      const row = threadList.querySelector(\n        `a[data-thread=\"${$selectedThread}\"]`\n      );\n      if (!row) return;\n\n      row.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n      clearInterval(interval);\n    };\n\n    interval = setInterval(check, 100);\n    check();\n  }\n\n  async function scrollToMessage(message) {\n    if (!message) return;\n\n    await tick();\n    const item = messageList.querySelector(`div[data-message=\"${message.id}\"]`);\n    item.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  }\n\n  function nextThread() {\n    let node;\n\n    if ($selectedThread) {\n      const row = threadList.querySelector(\n        `a[data-thread=\"${$selectedThread}\"]`\n      );\n      node = row?.nextSibling;\n    } else if (threadList.children.length > 0) {\n      node = threadList.children[0];\n    }\n\n    if (node?.dataset?.thread) {\n      url.selectThread($selectedMailbox, node.dataset.thread);\n    }\n  }\n\n  function prevThread() {\n    if (!$selectedThread) {\n      return;\n    }\n\n    const row = threadList.querySelector(`a[data-thread=\"${$selectedThread}\"]`);\n    const node = row?.previousSibling;\n    if (node?.dataset?.thread) {\n      url.selectThread($selectedMailbox, node.dataset.thread);\n    }\n  }\n\n  function nextMessage() {\n    if (!$selectedThread) {\n      return;\n    }\n\n    const messages = [...messageList.querySelectorAll(`div[data-message]`)];\n    const idx = messages.findIndex(\n      (node) => node.dataset.message === $selectedMessage\n    );\n\n    if (idx < 0 || idx >= messages.length) {\n      return;\n    }\n\n    const node = messages[idx + 1];\n    if (node?.dataset?.message) {\n      selectedMessage.selectMessage(node.dataset.message);\n    }\n  }\n\n  function prevMessage() {\n    if (!$selectedThread) {\n      return;\n    }\n\n    const messages = [...messageList.querySelectorAll(`div[data-message]`)];\n    const idx = messages.findIndex(\n      (node) => node.dataset.message === $selectedMessage\n    );\n\n    if (idx <= 0 || idx > messages.length) {\n      return;\n    }\n\n    const node = messages[idx - 1];\n    if (node?.dataset?.message) {\n      selectedMessage.selectMessage(node.dataset.message);\n    }\n  }\n\n  function openHtml() {\n    const htmlItems = messageList?.querySelectorAll(`a[data-html-body]`);\n    if (!htmlItems || htmlItems.length === 0) {\n      return;\n    }\n\n    htmlItems[0].click();\n  }\n\n  const keys = {\n    n: nextThread,\n    p: prevThread,\n    Escape: () => url.deselectThread(),\n    N: () => messageList?.scrollBy(0, 200),\n    P: () => messageList?.scrollBy(0, -200),\n    e: nextMessage,\n    a: prevMessage,\n    C: () => newMessage.create(),\n    r: () => newMessage.reply($selectedMessage, \"sender\"),\n    R: () => newMessage.reply($selectedMessage, \"all\"),\n    f: () => newMessage.forward(findMessage($thread, $selectedMessage)),\n    s: () => searchField.focus(),\n    V: openHtml,\n    A: () => activeMessage?.move(\"archive\"),\n    D: () => activeMessage?.move(\"trash\"),\n    J: () => activeMessage?.move(\"spam\"),\n    \"alt+i\": () => url.selectMailbox(\"inbox\"),\n    \"alt+a\": () => url.selectMailbox(\"archive\"),\n  };\n\n  function handleKeydown(e) {\n    const { key, altKey, target } = e;\n    if (target.tagName === \"INPUT\" || target.tagName === \"TEXTAREA\") {\n      return;\n    }\n\n    if (target.tagName === \"DIV\" && Boolean(target.contentEditable)) {\n      return;\n    }\n\n    const comboKey = `${altKey ? \"alt+\" : \"\"}${key}`;\n    if (keys[comboKey]) {\n      console.debug(`found hotkey for ${comboKey}`);\n      keys[comboKey]();\n      e.preventDefault();\n    }\n  }\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<Tailwind />\n\n<div class=\"h-screen w-screen flex\">\n  {#if !sidebarCollapsed}\n    <div\n      class=\"absolute top-0 bottom-0 left-0 right-0 sm:hidden\"\n      on:click={() => (sidebarCollapsed = !sidebarCollapsed)}\n    />\n  {/if}\n\n  <aside\n    class={`absolute sm:fixed h-screen flex-shrink-0 flex flex-col bg-gray-600 z-10 ${\n      sidebarCollapsed ? \"hidden sm:flex w-16\" : \"w-56\"\n    }`}\n  >\n    <div\n      class={`h-14 flex flex-row ${\n        sidebarCollapsed ? \"justify-center\" : \"justify-between\"\n      } items-center p-4`}\n    >\n      {#if !sidebarCollapsed}\n        <h2 class=\"text-gray-100 font-semibold\">{$address}</h2>\n      {/if}\n\n      <RefreshButton {refreshing} on:click={refreshMailboxes} />\n    </div>\n\n    <div class=\"px-4\">\n      <ComposeButton\n        collapsed={sidebarCollapsed}\n        on:click={() => newMessage.create()}\n      />\n    </div>\n\n    <div class=\"p-4 flex-1\">\n      <Mailboxes collapsed={sidebarCollapsed} />\n    </div>\n\n    <div class=\"p-4\">\n      <MenuButton\n        collapsed={sidebarCollapsed}\n        on:click={() => (sidebarCollapsed = !sidebarCollapsed)}\n      />\n    </div>\n  </aside>\n\n  <main\n    class={`flex flex-col w-full ${sidebarCollapsed ? \"sm:pl-16\" : \"sm:pl-56\"}`}\n  >\n    <header\n      class=\"flex sm:flex-row flex-wrap items-center sm:justify-center py-3 pr-3 pl-3 sm:pl-0 border-b border-gray-500 bg-gray-600\"\n    >\n      <div class=\"sm:hidden mr-3 pb-1\">\n        <MenuButton\n          collapsed={sidebarCollapsed}\n          on:click={() => (sidebarCollapsed = !sidebarCollapsed)}\n        />\n      </div>\n\n      <SearchField\n        bind:this={searchField}\n        on:focus={() => (searching = true)}\n        on:blur={() => (searching = false)}\n      />\n      <ThreadToolbar disabled={$selectedThreads.length === 0} />\n      <ThreadPages />\n    </header>\n\n    <section\n      class={`${\n        $selectedThread ? \"h-0 sm:h-60 border-b-8\" : \"flex-1\"\n      } flex-shrink-0 border-gray-300 overflow-y-auto`}\n      bind:this={threadList}\n    >\n      {#if currentMailbox}\n        <Threads mailbox={currentMailbox} />\n      {/if}\n    </section>\n\n    {#if $selectedThread}\n      <section\n        class=\"relative flex-1 w-full overflow-y-auto\"\n        bind:this={messageList}\n      >\n        <div class=\"sticky top-3 w-full right-3 z-10\">\n          <button\n            class=\"absolute right-3 bg-gray-200 p-1 rounded text-gray-500 order-0 hover:text-gray-800 active:text-gray-500 focus:outline-none\"\n            on:click={() => url.deselectThread()}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              class=\"w-5 fill-current\"\n              ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n                d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              /></svg\n            >\n          </button>\n        </div>\n\n        <Thread thread={$thread} bind:activeMessage />\n      </section>\n    {/if}\n  </main>\n\n  {#if $newMessage}\n    <MessageForm on:close={() => newMessage.destroy()} />\n  {/if}\n</div>\n\n<style global>\n  body {\n    padding: 0;\n  }\n</style>\n","export default function favicon(hasUnread) {\n  if (!hasUnread) {\n    return \"/favicon.png\";\n  }\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.height = 64;\n  canvas.width = 64;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.font = \"64px serif\";\n  ctx.fillText(\"✉️\", 0, 64);\n\n  return canvas.toDataURL();\n}\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","error","catch","hasCatch","pending","update_await_block_branch","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","get","set","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","bind","props","bound","create_component","mount_component","customElement","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","indexOf","splice","$$props","obj","$$set","keys","refreshing","collapsed","mailboxIds","mailboxTitles","inbox","archive","sent","draft","spam","trash","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","cleanup","sync","result","unsubscribers","selectMessage","messageId","initialURL","URL","window","location","href","mailbox","thread","pathname","split","searchTerms","searchParams","state","url","pushState","history","console","debug","$href","selectMailbox","selectThread","newState","path","escape","deselectThread","selectedMessage","search","terms","selectedMailbox","$url","selectedThread","ApiClient","baseURL","method","res","fetch","headers","Content-Type","Accept","body","JSON","stringify","ok","json","ApiError","status","statusText","request","page","perPage","threadId","tags","part","message","messageFormData","replyTo","btoa","formData","FormData","to","addr","cc","subject","attachments","file","File","id","super","address","predefinedTags","async","default","mailboxes","updateUnreadCounters","idx","unread","currentPage","hasMore","has_more","threads","_","setTags","remove","iconType","hover","$searchTerms","charCode","focus","findMessage","subThread","match","findOtherMessage","withTags","withoutTags","every","tag","includes","findLastMessage","messages","matchedMessages","sort","timestamp","acc","getThreadTags","threadTags","updateTags","updates","newTags","updateThreadTags","markAsRead","tagChanges","fromMailbox","toMailbox","fromTags","find","toTags","changes","toggle","tooltip","tooltipPosition","variant","disabled","className","tooltipClass","viewOnly","classes","dispatch","newTag","allTags","$mailboxes","reduce","concat","$predefinedTags","showTagPicker","move","folder","$selectedThreads","$selectedMailbox","$selectedThread","selectedThreads","$threads","localeCompare","stopPropagation","checked","borderClass","commonTag","date_relative","authors","unreadClasses","$currentPage","getTextContent","startsWith","content","child","getAttachments","quotedText","replace","join","parseMessageBody","html","parseTextContent","curBlock","line","lType","lineType","linkify","matchFn","items","replaceAll","offset","substring","wrap","folded","w3mRender","hostname","toString","filename","atob","removed","mail","To","Cc","Subject","Date","From","reply","replyToMessage","original","item","originalHeaders","forward","attach","size","edit","setField","newMessage","other","$thread","findIndex","nextThread","selectNextThread","level","activeMessage","formattedAddress","matches","exec","completions","timer","focused","selectedOptionIdx","completeOptions","selectOption","completeOption","scrollIntoView","clearTimeout","setTimeout","addresses","newBlocks","el","querySelectorAll","dataset","textContent","endsWith","ranges","getTargetRanges","startContainer","startOffset","endOffset","inputType","innerHTML","otherQuote","insertAdjacentHTML","getSelection","collapse","nextSibling","dataTransfer","getData","formatSize","toFixed","toInput","fileInput","submiting","submitMessage","sendMessage","$newMessage","onInput","removeAttachment","saveMessage","files","altKey","selection","rangeCount","getRangeAt","lines","innerText","word","trim","firstChild","min","nodeValue","fillBlock","click","threadList","messageList","searchField","sidebarCollapsed","searching","refreshMailboxes","now","setInterval","querySelector","previousSibling","Escape","N","scrollBy","P","$selectedMessage","C","R","f","V","htmlItems","A","D","J","alt+i","alt+a","currentMailbox","title","head","hasUnread","canvas","height","width","getContext","font","fillText","toDataURL","favicon","loadThread","interval","check","row","behavior","clearInterval","scrollToThread","scrollToMessage","tagName","Boolean","contentEditable","comboKey"],"mappings":"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"}