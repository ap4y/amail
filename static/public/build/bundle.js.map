{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/RefreshButton.svelte","../../src/components/ComposeButton.svelte","../../src/components/MenuButton.svelte","../../src/components/InboxIcon.svelte","../../src/config.js","../../node_modules/svelte/store/index.mjs","../../src/client.js","../../src/stores/threads.js","../../src/stores/message.js","../../src/stores/url.js","../../src/stores/mailboxes.js","../../src/components/Mailboxes.svelte","../../src/components/SearchField.svelte","../../src/stores/thread.js","../../src/lib/tagging.js","../../src/stores/selected_threads.js","../../src/components/ToolbarButton.svelte","../../src/components/TagBadge.svelte","../../src/components/TagPicker.svelte","../../src/components/ThreadToolbar.svelte","../../src/components/ThreadPages.svelte","../../src/components/Checkbox.svelte","../../src/components/Threads.svelte","../../src/lib/email.js","../../src/lib/linkify.js","../../src/components/DeepquoteBlock.svelte","../../src/components/BodyItem.svelte","../../src/components/FormattedAddress.svelte","../../src/components/MessageInfo.svelte","../../src/stores/new_message.js","../../src/components/MessageToolbar.svelte","../../src/components/Message.svelte","../../src/components/CollapsedMessage.svelte","../../src/components/Thread.svelte","../../src/components/AddressField.svelte","../../src/components/TextEditor.svelte","../../src/components/MessageForm.svelte","../../src/App.svelte","../../src/lib/favicon.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let refreshing;\n</script>\n\n<button\n  class=\"w-6 text-white hover:text-gray-300 active:text-gray-400 focus:outline-none\"\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current\"\n    class:animate-spin={refreshing}\n    on:click\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n    /></svg\n  >\n</button>\n","<script>\n  export let collapsed = false;\n</script>\n\n{#if collapsed}\n  <button\n    class=\"bg-red-600 hover:bg-red-700 active:bg-red-800 focus:outline-none w-8 text-white h-8 p-1 rounded border-0\"\n    on:click\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current h-full\"\n    >\n      <path d=\"M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6V13z\" />\n      ></svg\n    >\n  </button>\n{:else}\n  <button\n    class=\"bg-red-600 hover:bg-red-700 active:bg-red-800 focus:outline-none w-full text-white h-10 rounded border-0 font-semibold\"\n    on:click\n  >\n    New message\n  </button>\n{/if}\n","<script>\n  export let collapsed;\n</script>\n\n<button\n  class=\"text-gray-300 h-8 p-1 rounded hover:bg-gray-700 focus:outline-none\"\n  on:click\n>\n  {#if collapsed}\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current h-full\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n      /></svg\n    >\n  {:else}\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current h-full\"\n      ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n        d=\"M3 18h13v-2H3v2zm0-5h10v-2H3v2zm0-7v2h13V6H3zm18 9.59L17.42 12 21 8.41 19.59 7l-5 5 5 5L21 15.59z\"\n      /></svg\n    >\n  {/if}\n</button>\n","<script>\n  export let id;\n  export let iconType = \"inbox\";\n</script>\n\n{#if id === \"inbox\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n      d=\"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z\"\n    /></svg\n  >\n{:else if id === \"archive\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    enable-background=\"new 0 0 24 24\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g\n      ><path\n        d=\"M20,2H4C3,2,2,2.9,2,4v3.01C2,7.73,2.43,8.35,3,8.7V20c0,1.1,1.1,2,2,2h14c0.9,0,2-0.9,2-2V8.7c0.57-0.35,1-0.97,1-1.69V4 C22,2.9,21,2,20,2z M15,14H9v-2h6V14z M20,7H4V4h16V7z\"\n      /></g\n    ></svg\n  >\n{:else if id === \"sent\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n      d=\"M19 3H4.99c-1.11 0-1.98.9-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10zM8 11h2v3h4v-3h2l-4-4-4 4z\"\n    /></svg\n  >\n{:else if id === \"draft\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z\"\n    /></svg\n  >\n{:else if id === \"spam\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n    /></svg\n  >\n{:else if id === \"trash\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n    /></svg\n  >\n{:else if id === \"attachment\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n    /></svg\n  >\n{:else if id === \"replied\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\"\n    /></svg\n  >\n{:else if iconType === \"tag\"}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n    /></svg\n  >\n{:else}\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-full\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z\"\n    /></svg\n  >\n{/if}\n","export const mailboxIds = [\n  \"inbox\",\n  \"archive\",\n  \"sent\",\n  \"draft\",\n  \"spam\",\n  \"trash\",\n];\n\nexport const mailboxTitles = {\n  inbox: \"Inbox\",\n  archive: \"Archive\",\n  sent: \"Sent\",\n  draft: \"Drafts\",\n  spam: \"Spam\",\n  trash: \"Trash\",\n};\n\nexport const threadsPerPage = 50;\nexport const refreshInterval = 60 * 1000;\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","class ApiClient {\n  static default = new ApiClient(\"/api\");\n\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async request(method = \"GET\", path, data) {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    };\n\n    const res = await fetch(`${this.baseURL}${path}`, {\n      method,\n      headers,\n      body: data ? JSON.stringify(data) : null,\n    });\n\n    if (res.ok) {\n      return res.json();\n    }\n\n    throw new ApiError(res.status, res.statusText);\n  }\n\n  mailboxes() {\n    return this.request(\"GET\", \"/mailboxes\");\n  }\n\n  threads(terms, page = 0, perPage = 50) {\n    return this.request(\"GET\", `/search/${terms}?page=${page}&per=${perPage}`);\n  }\n\n  thread(threadId) {\n    return this.request(\"GET\", `/threads/${threadId}`);\n  }\n\n  updateTags(terms, tags) {\n    return this.request(\"PUT\", \"/tags\", { terms, tags });\n  }\n\n  async sendMessage(message) {\n    const formData = new FormData();\n    message.to.forEach((addr) => formData.append(\"to[]\", addr));\n    message.cc.forEach((addr) => formData.append(\"cc[]\", addr));\n    formData.append(\"subject\", message.subject);\n    formData.append(\"body\", message.body);\n    Object.keys(message.headers).forEach((key) =>\n      formData.append(`headers[${key}]`, message.headers[key])\n    );\n    message.attachments.forEach((file) =>\n      formData.append(\"attachments[]\", file, file.name)\n    );\n\n    const res = await fetch(`${this.baseURL}/messages`, {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (res.ok) {\n      return null;\n    }\n\n    throw new ApiError(res.status, res.statusText);\n  }\n\n  replyToMessage(messageId, replyTo) {\n    return this.request(\n      \"GET\",\n      `/messages/${btoa(messageId)}/reply?reply-to=${replyTo}`\n    );\n  }\n}\n\nexport class ApiError extends Error {\n  constructor(status, statusText) {\n    super(`Invalid response ${status}: ${statusText}`);\n    this.status = status;\n  }\n}\n\nexport default ApiClient;\n","import { writable } from \"svelte/store\";\nimport ApiClient from \"../client\";\nimport { threadsPerPage } from \"../config\";\n\nexport const currentPage = writable(0);\nexport const totalThreads = writable(0);\n\nconst { subscribe, set, update } = writable([]);\n\nconst fetch = async (terms, currentPage) => {\n  if (!terms) {\n    set([]);\n    return [];\n  }\n\n  const { total, threads } = await ApiClient.default.threads(\n    terms,\n    currentPage || 0,\n    threadsPerPage\n  );\n\n  totalThreads.set(total);\n  set(threads);\n\n  return threads;\n};\n\nconst setTags = (threadId, tags) => {\n  update((threads) =>\n    threads.map((thread) =>\n      thread.thread === threadId ? { ...thread, tags } : thread\n    )\n  );\n};\n\nexport default { subscribe, fetch, setTags };\n","import { writable } from \"svelte/store\";\n\nconst { subscribe, set, update } = writable(null);\n\nfunction selectMessage(messageId) {\n  set(messageId);\n}\n\nexport default { subscribe, selectMessage };\n","import { derived, writable } from \"svelte/store\";\nimport { mailboxIds } from \"../config\";\nimport { currentPage } from \"./threads\";\nimport selectedMessage from \"./message\";\n\nconst initialURL = new URL(window.location.href);\nconst href = writable(initialURL);\nconst [, mailbox, thread] = initialURL.pathname.split(\"/\");\ninitialURL.mailbox = mailbox;\nif (mailbox === \"search\") {\n  initialURL.searchTerms = initialURL.searchParams.get(\"terms\");\n} else {\n  initialURL.thread = thread;\n}\n\nconst update = ({ state }) => {\n  const url = new URL(window.location.href);\n  url.mailbox = state?.mailbox;\n  url.thread = state?.thread;\n  url.searchTerms = state?.searchTerms;\n  href.set(url);\n};\n\nwindow.addEventListener(\"popstate\", update);\n\nfunction pushState(state, url) {\n  history.pushState(state, \"\", url);\n  update({ state });\n  console.debug(`navigating to ${url}, state: `, state);\n}\n\nconst url = derived(href, ($href) => $href);\n\nfunction selectMailbox(mailbox) {\n  currentPage.set(0);\n  pushState({ mailbox }, `/${mailbox}`);\n}\n\nfunction selectThread(mailbox, thread) {\n  const state = history.state;\n  const newState = { mailbox, thread, searchTerms: state.searchTerms };\n  let path = `/${mailbox}/${thread}`;\n  if (state.searchTerms) {\n    path += `?terms=${escape(state.searchTerms)}`;\n  }\n\n  pushState(newState, path);\n}\n\nfunction deselectThread() {\n  const state = history.state;\n\n  selectedMessage.selectMessage(null);\n  pushState({ mailbox: state.mailbox, thread: null }, `/${state.mailbox}`);\n}\n\nfunction search(terms) {\n  pushState(\n    { mailbox: \"search\", searchTerms: terms },\n    `/search/?terms=${escape(terms)}`\n  );\n}\n\nexport default {\n  subscribe: url.subscribe,\n  selectMailbox,\n  selectThread,\n  deselectThread,\n  search,\n};\n\nexport const selectedMailbox = derived(url, ($url) =>\n  $url.mailbox?.length > 0 ? $url.mailbox : mailboxIds[0]\n);\n\nexport const selectedThread = derived(url, ($url) => $url.thread);\n\nexport const searchTerms = derived(url, ($url) => $url.searchTerms);\n","import { writable, derived } from \"svelte/store\";\nimport ApiClient from \"../client\";\n\nexport const address = writable(null);\nexport const name = writable(null);\n\nconst { subscribe, set, update } = writable([]);\n\nconst fetch = async () => {\n  const res = await ApiClient.default.mailboxes();\n  set(res.mailboxes);\n  address.set(res.address);\n  name.set(res.name);\n  return res.mailboxes;\n};\n\nconst updateUnreadCounters = async () => {\n  const { mailboxes } = await ApiClient.default.mailboxes();\n  update((current) =>\n    current.map((mailbox, idx) => ({\n      ...mailbox,\n      unread: mailboxes[idx].unread,\n    }))\n  );\n};\n\nexport default { subscribe, fetch, updateUnreadCounters };\n","<script>\n  import InboxIcon from \"./InboxIcon.svelte\";\n  import { mailboxTitles } from \"../config\";\n  import url, { selectedMailbox } from \"../stores/url\";\n  import mailboxes from \"../stores/mailboxes\";\n\n  export let collapsed;\n</script>\n\n<ul>\n  {#await mailboxes.fetch() then _}\n    {#each $mailboxes as mailbox, idx}\n      <li\n        class={`relative p-1 mb-2 flex flex-row ${\n          collapsed ? \"justify-center\" : \"justify-between\"\n        } ${\n          $selectedMailbox === mailbox.id\n            ? \"text-red-500 font-semibold\"\n            : \"text-gray-300\"\n        }`}\n      >\n        <a\n          href={`/${mailbox.id}`}\n          class=\"flex flex-row items-center hover:text-red-500 visited:text-current\"\n          on:click|preventDefault={() => url.selectMailbox(mailbox.id)}\n        >\n          {#if collapsed}\n            {#if mailboxTitles[mailbox.id]}\n              <span class=\"w-5\">\n                <InboxIcon id={mailbox.id} />\n              </span>\n            {:else}\n              <span class=\"w-7\">\n                <InboxIcon id={mailbox.id} />\n              </span>\n              <span\n                class=\"absolute text-sm left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-2/3\"\n                >{mailbox.id[0]}</span\n              >\n            {/if}\n          {:else}\n            <span class=\"mr-2 w-5\">\n              <InboxIcon id={mailbox.id} />\n            </span>\n            {mailboxTitles[mailbox.id] || mailbox.id}\n          {/if}\n        </a>\n\n        {#if mailbox.unread > 0}\n          {#if collapsed}\n            <span\n              class=\"bg-red-600 absolute -top-1 -right-1 w-2 h-2 rounded-sm\"\n            />\n          {:else}\n            <span\n              class={`inline-flex items-center text-sm px-2 rounded ${\n                mailbox.id === \"inbox\"\n                  ? \"bg-red-600 text-gray-100\"\n                  : \"bg-gray-300 text-gray-600\"\n              }`}>{mailbox.unread}</span\n            >\n          {/if}\n        {/if}\n      </li>\n    {/each}\n  {/await}\n</ul>\n","<script>\n  import url, { searchTerms } from \"../stores/url\";\n\n  $: terms = $searchTerms;\n\n  function onKeyPress({ charCode }) {\n    if (charCode === 13) {\n      url.search(terms);\n    }\n  }\n</script>\n\n<div class=\"relative text-gray-300\">\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"fill-current w-5 absolute left-2 top-1/2 transform -translate-y-1/2\"\n    ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n      d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n    /></svg\n  >\n  <input\n    type=\"search\"\n    class=\"w-96 h-full outline-none pl-8 pr-1 py-1 bg-gray-600 text-sm border rounded border-gray-500 hover:border-gray-400 focus:border-gray-400\"\n    placeholder=\"Search threads\"\n    on:keypress={onKeyPress}\n    bind:value={terms}\n  />\n</div>\n","import { writable } from \"svelte/store\";\nimport ApiClient from \"../client\";\n\nconst { subscribe, set, update } = writable(null);\n\nexport function findMessage(thread, messageId) {\n  if (!thread) return null;\n\n  for (const [message, subThread] of thread) {\n    if (message.id === messageId) return message;\n\n    const match = findMessage(subThread, messageId);\n    if (match) return match;\n  }\n\n  return null;\n}\n\nexport function findOtherMessage(\n  thread,\n  messageId,\n  withTags = [],\n  withoutTags = []\n) {\n  if (!thread) return null;\n\n  for (const [message, subThread] of thread) {\n    if (\n      message.id != messageId &&\n      withTags.every((tag) => message.tags.includes(tag)) &&\n      withoutTags.every((tag) => !message.tags.includes(tag))\n    ) {\n      return message;\n    }\n\n    const match = findOtherMessage(subThread, messageId, withTags, withoutTags);\n    if (match) return match;\n  }\n\n  return null;\n}\n\nexport function findLastMessage(\n  thread,\n  messageId,\n  withTags = [],\n  withoutTags = []\n) {\n  const messages = matchedMessages(\n    thread,\n    messageId,\n    withTags,\n    withoutTags\n  ).sort((a, b) => b.timestamp - a.timestamp);\n\n  return messages.length > 0 ? messages[0] : null;\n}\n\nfunction matchedMessages(thread, messageId, withTags, withoutTags, acc = []) {\n  if (!thread) return acc;\n\n  for (const [message, subThread] of thread) {\n    if (\n      message.id != messageId &&\n      withTags.every((tag) => message.tags.includes(tag)) &&\n      withoutTags.every((tag) => !message.tags.includes(tag))\n    ) {\n      acc.push(message);\n    }\n\n    matchedMessages(subThread, messageId, withTags, withoutTags, acc);\n  }\n\n  return acc;\n}\n\nfunction getThreadTags(set, thread) {\n  for (const [message, subThread] of thread) {\n    message.tags.forEach((tag) => set.add(tag));\n    getThreadTags(set, subThread);\n  }\n\n  return set;\n}\n\nconst fetch = async (selectedThread) => {\n  if (!selectedThread) {\n    set(null);\n    return null;\n  }\n\n  const thread = await ApiClient.default.thread(selectedThread);\n  set(thread);\n\n  return thread;\n};\n\nfunction updateTags(messageId, tags) {\n  const threadTags = new Set();\n\n  update((thread) => {\n    const message = findMessage(thread, messageId);\n    if (message) message.tags = tags;\n    getThreadTags(threadTags, thread);\n    return thread;\n  });\n\n  return [...threadTags];\n}\n\nexport function getFirstMessage(thread) {\n  const [firstThread] = thread;\n  if (!firstThread) return null;\n\n  const [message] = firstThread;\n  if (!message) return null;\n\n  return message;\n}\n\nexport default { subscribe, fetch, updateTags };\n","import ApiClient from \"../client\";\nimport mailboxes from \"../stores/mailboxes\";\nimport threads from \"../stores/threads\";\nimport thread from \"../stores/thread\";\n\nexport async function updateTags(threadId, messageId, updates) {\n  if (!messageId || !threadId) return [];\n\n  const newTags = await ApiClient.default.updateTags(\n    `id:${messageId}`,\n    updates\n  );\n\n  const threadTags = thread.updateTags(messageId, newTags);\n  threads.setTags(threadId, threadTags);\n  mailboxes.updateUnreadCounters();\n\n  return newTags;\n}\n\nexport async function updateThreadTags(threadId, updates) {\n  if (!threadId) return [];\n\n  const newTags = await ApiClient.default.updateTags(\n    `thread:${threadId}`,\n    updates\n  );\n\n  threads.setTags(threadId, newTags);\n  await mailboxes.updateUnreadCounters();\n\n  return newTags;\n}\n\nexport async function markAsRead(threadId, message) {\n  if (!message.tags.includes(\"unread\")) return [];\n\n  return await updateTags(threadId, message.id, [\"-unread\"]);\n}\n\nexport function tagChanges(mailboxes, fromMailbox, toMailbox) {\n  const fromTags = mailboxes.find(({ id }) => id === fromMailbox).tags;\n  const toTags = mailboxes.find(({ id }) => id === toMailbox).tags;\n\n  const changes = [];\n  mailboxes.forEach(({ tags }) =>\n    tags.forEach((tag) => !toTags.includes(tag) && changes.push(`-${tag}`))\n  );\n  toTags.forEach((tag) => changes.push(`+${tag}`));\n\n  return { changes, fromTags, toTags };\n}\n","import { writable } from \"svelte/store\";\n\nconst { subscribe, update } = writable([]);\n\nfunction toggle({ thread }) {\n  update((threads) =>\n    threads.includes(thread)\n      ? threads.filter((id) => id !== thread)\n      : [...threads, thread]\n  );\n}\n\nexport default { subscribe, toggle };\n","<script>\n  export let tooltip;\n  export let tooltipPosition = \"center\";\n  export let variant = \"message\";\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let tooltipClass = \"-translate-x-1/2\";\n  $: if (tooltipPosition === \"left\") {\n    tooltipClass = \"left-0\";\n  } else if (tooltipPosition === \"right\") {\n    tooltipClass = \"right-0\";\n  } else {\n    tooltipClass = \"left-4 -translate-x-1/2\";\n  }\n\n  let hover = false;\n</script>\n\n<div\n  class=\"h-full relative {className}\"\n  on:mouseover={() => (hover = true)}\n  on:mouseout={() => (hover = false)}\n>\n  {#if variant === \"toolbar\"}\n    <button\n      {disabled}\n      class=\"h-full p-2 rounded text-gray-300 focus:outline-none hover:text-gray-100 active:text-gray-100 disabled:opacity-25\"\n      on:click\n    >\n      <slot />\n    </button>\n    <span\n      class={`absolute -bottom-full z-50 transform ${tooltipClass} translate-y-2 p-2 whitespace-nowrap rounded bg-gray-800 text-white ${\n        hover ? \"\" : \"hidden\"\n      }`}>{tooltip}</span\n    >\n  {:else}\n    <button\n      {disabled}\n      class=\"w-9 p-2 rounded hover:border-gray-500 bg-white text-gray-700 active:bg-gray-300 focus:outline-none border\"\n      on:click\n    >\n      <slot />\n    </button>\n    <span\n      class={`absolute -top-full z-50 transform ${tooltipClass} -translate-y-2 p-2 whitespace-nowrap rounded bg-gray-800 text-white ${\n        hover ? \"\" : \"hidden\"\n      }`}>{tooltip}</span\n    >\n  {/if}\n</div>\n","<script>\n  import InboxIcon from \"./InboxIcon.svelte\";\n\n  export let tag;\n  export let viewOnly = true;\n\n  let className = \"\";\n  export { className as class };\n\n  $: classes = viewOnly ? \"\" : \"cursor-pointer hover:text-red-500\";\n</script>\n\n<div\n  class=\"inline-flex items-center text-gray-600 text-sm max-w-xs truncate {className} {classes}\"\n  on:click\n>\n  <span class=\"w-4 mr-1 flex-shrink-0\">\n    <InboxIcon id={tag} iconType=\"tag\" />\n  </span>\n\n  <span>{tag}</span>\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  import TagBadge from \"./TagBadge.svelte\";\n\n  export let tags = [];\n\n  let className = \"\";\n  export { className as class };\n\n  const dispatch = createEventDispatcher();\n  let newTag = \"\";\n\n  function onKeyPress({ charCode }) {\n    if (charCode === 13) {\n      dispatch(\"add\", newTag);\n      newTag = \"\";\n    }\n  }\n</script>\n\n<div\n  class=\"{className} w-72 p-4 bg-white border-2 border-gray-600 rounded shadow\"\n>\n  <button\n    class=\"absolute w-5 top-2 right-2 text-gray-500 order-0 hover:text-gray-800 active:text-gray-500 focus:outline-none\"\n    on:click={() => dispatch(\"close\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n      /></svg\n    >\n  </button>\n\n  <h3 class=\"mb-1 font-semibold text-gray-700\">Labels</h3>\n  <input\n    type=\"text\"\n    placeholder=\"Type in a new tag\"\n    class=\"w-full outline-none mb-4 px-3 py-1 bg-white text-sm text-gray-700 rounded border border-gray-400 hover:border-gray-500 focus:border-red-300\"\n    on:keypress={onKeyPress}\n    bind:value={newTag}\n  />\n\n  <div class=\"flex flex-row flex-wrap\">\n    {#each tags as tag}\n      <TagBadge\n        class=\"mb-2 mr-2\"\n        viewOnly={false}\n        {tag}\n        on:click={() => dispatch(\"remove\", tag)}\n      />\n    {/each}\n  </div>\n</div>\n","<script>\n  import { updateThreadTags, tagChanges } from \"../lib/tagging\";\n\n  import mailboxes from \"../stores/mailboxes\";\n  import { selectedMailbox } from \"../stores/url\";\n  import selectedThreads from \"../stores/selected_threads\";\n  import threads from \"../stores/threads\";\n\n  import ToolbarButton from \"./ToolbarButton.svelte\";\n  import TagPicker from \"./TagPicker.svelte\";\n\n  export let disabled = false;\n  let showTagPicker = false;\n\n  $: tags = [\n    ...$threads\n      .filter(({ thread }) => $selectedThreads.includes(thread))\n      .reduce((acc, { tags }) => {\n        tags.forEach((tag) => acc.add(tag));\n        return acc;\n      }, new Set()),\n  ].sort((a, b) => a.localeCompare(b));\n\n  async function move(folder) {\n    for (const thread of $selectedThreads) {\n      const { changes } = tagChanges($mailboxes, $selectedMailbox, folder);\n      await updateThreadTags(thread, [...changes, \"-unread\"]);\n      selectedThreads.toggle({ thread });\n    }\n  }\n\n  async function addTag({ detail }) {\n    for (const thread of $selectedThreads) {\n      await updateThreadTags(thread, [`+${detail}`]);\n    }\n  }\n\n  async function removeTag({ detail }) {\n    for (const thread of $selectedThreads) {\n      await updateThreadTags(thread, [`-${detail}`]);\n    }\n  }\n</script>\n\n<div class=\"h-full mx-4 flex flex-row\">\n  <ToolbarButton\n    variant=\"toolbar\"\n    tooltip=\"Move to archive\"\n    class=\"mr-1\"\n    {disabled}\n    on:click={() => move(\"archive\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      enable-background=\"new 0 0 24 24\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current h-full\"\n      ><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g\n        ><path\n          d=\"M20,2H4C3,2,2,2.9,2,4v3.01C2,7.73,2.43,8.35,3,8.7V20c0,1.1,1.1,2,2,2h14c0.9,0,2-0.9,2-2V8.7c0.57-0.35,1-0.97,1-1.69V4 C22,2.9,21,2,20,2z M15,14H9v-2h6V14z M20,7H4V4h16V7z\"\n        /></g\n      ></svg\n    >\n  </ToolbarButton>\n\n  <ToolbarButton\n    variant=\"toolbar\"\n    tooltip=\"Move to spam\"\n    class=\"mr-1\"\n    {disabled}\n    on:click={() => move(\"spam\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"h-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n      /></svg\n    >\n  </ToolbarButton>\n  <ToolbarButton\n    variant=\"toolbar\"\n    tooltip=\"Move to trash\"\n    class=\"mr-1\"\n    {disabled}\n    on:click={() => move(\"trash\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"h-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n      /></svg\n    >\n  </ToolbarButton>\n\n  <div>\n    <ToolbarButton\n      variant=\"toolbar\"\n      tooltip=\"Tag\"\n      {disabled}\n      on:click={() => (showTagPicker = true)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"h-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n        /></svg\n      >\n    </ToolbarButton>\n\n    {#if showTagPicker}\n      <TagPicker\n        class=\"absolute\"\n        {tags}\n        on:add={addTag}\n        on:remove={removeTag}\n        on:close={() => (showTagPicker = false)}\n      />\n    {/if}\n  </div>\n</div>\n","<script>\n  import { threadsPerPage } from \"../config\";\n  import { currentPage, totalThreads } from \"../stores/threads\";\n\n  $: lastPage = Math.ceil($totalThreads / threadsPerPage);\n</script>\n\n<div class=\"flex flex-row items-center ml-auto text-gray-300\">\n  <button\n    disabled={$currentPage == 0}\n    class=\"border-0 rounded hover:bg-gray-700 active:bg-gray-800 focus:outline-none disabled:opacity-50 disabled:bg-transparent\"\n    on:click={() => currentPage.update((page) => page - 1)}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current w-7\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n      /></svg\n    >\n  </button>\n  <span class=\"font-semibold px-3\">{$currentPage + 1}</span>\n  <button\n    disabled={$currentPage == lastPage - 1}\n    class=\"border-0 rounded hover:bg-gray-700 active:bg-gray-800 focus:outline-none disabled:opacity-50 disabled:bg-transparent\"\n    on:click={() => currentPage.update((page) => page + 1)}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current w-7\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n      /></svg\n    >\n  </button>\n</div>\n","<script>\n  let className = \"\";\n  export { className as class };\n  export let checked = false;\n\n  $: borderClass = checked ? \"border-gray-500\" : \"border-gray-300\";\n</script>\n\n<div\n  class=\"w-5 h-5 rounded border-2 text-gray-500 {borderClass} {className}\"\n  on:click|stopPropagation|preventDefault\n>\n  {#if checked}\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current w-full\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n      /></svg\n    >\n  {/if}\n</div>\n","<script>\n  import url, { selectedMailbox, selectedThread } from \"../stores/url\";\n  import threads, { currentPage } from \"../stores/threads\";\n  import selectedThreads from \"../stores/selected_threads\";\n\n  import Checkbox from \"./Checkbox.svelte\";\n  import TagBadge from \"./TagBadge.svelte\";\n\n  export let mailbox;\n\n  $: if (mailbox) threads.fetch(mailbox.terms, $currentPage);\n\n  function unreadClasses({ tags }) {\n    return tags.includes(\"unread\")\n      ? \"bg-gray-50 text-red-500 visited:text-red-500\"\n      : \"bg-gray-100 text-gray-600 visited:text-gray-600\";\n  }\n\n  function commonTag(tag) {\n    return [\"inbox\", \"sent\", \"trash\", \"archive\", \"personal\", \"draft\", \"unread\"].includes(\n      tag\n    );\n  }\n</script>\n\n{#each $threads as thread (thread.thread)}\n  <a\n    href={`/${$selectedMailbox}/${thread.thread}`}\n    data-thread={thread.thread}\n    class={`h-10 flex flex-row items-center border-b hover:bg-gray-200 ${unreadClasses(\n      thread\n    )} ${$selectedThread === thread.thread ? \"bg-red-100 font-semibold\" : \"\"}`}\n    on:click|preventDefault={() =>\n      url.selectThread($selectedMailbox, thread.thread)}\n  >\n    <Checkbox\n      class=\"ml-3\"\n      checked={$selectedThreads.includes(thread.thread)}\n      on:click={() => selectedThreads.toggle(thread)}\n    />\n    <span class=\"px-3 w-28\">{thread.date_relative}</span>\n    <span class=\"pr-6 w-40 truncate\">{thread.authors}</span>\n    <span\n      class={`truncate flex-1 ${\n        thread.tags.includes(\"unread\") ? \"text-red-500\" : \"text-gray-800\"\n      }`}\n    >\n      {thread.subject}\n    </span>\n    <div class=\"inline-flex px-3\">\n      {#each thread.tags as tag}\n        {#if !commonTag(tag)}\n          <TagBadge class=\"mr-2\" {tag} />\n        {/if}\n      {/each}\n    </div>\n  </a>\n{/each}\n","function getTextContent(body, text = []) {\n  if (body[\"content-type\"].startsWith(\"multipart\")) {\n    body.content.forEach((child) => getTextContent(child, text));\n  } else if (body[\"content-type\"] === \"text/plain\") {\n    text.push(body.content);\n  }\n\n  return text;\n}\n\nexport function quotedText(body) {\n  return getTextContent(body)\n    .map((content) => content.replace(/^/gm, \"> \"))\n    .join(\"\");\n}\n\nexport function parseMessageBody(\n  body,\n  content = { text: [], attachments: [], html: [] }\n) {\n  if (body[\"content-type\"].startsWith(\"multipart\")) {\n    body.content.forEach((child) => parseMessageBody(child, content));\n  } else if (body[\"content-type\"] === \"text/plain\") {\n    const blocks = parseTextContent(body.content);\n    content.text.push(...blocks);\n  } else if (body[\"content-type\"] === \"text/html\") {\n    content.html.push(body);\n  } else if (body[\"content-disposition\"] === \"attachment\") {\n    content.attachments.push(body);\n  }\n\n  return content;\n}\n\nfunction parseTextContent(text) {\n  const blocks = [];\n  let curBlock = null;\n\n  text.split(\"\\n\").forEach((line) => {\n    const lType = lineType(line);\n    if (curBlock?.type !== lType) {\n      if (curBlock) blocks.push(curBlock);\n      curBlock = { type: lType, content: \"\" };\n    }\n\n    if (lType === \"quote\" || lType === \"deepquote\") {\n      curBlock.content += `${line.replace(/^>\\s?/, \"\")}\\n`;\n    } else {\n      curBlock.content += `${line}\\n`;\n    }\n  });\n  blocks.push(curBlock);\n\n  return blocks;\n}\n\nfunction lineType(line) {\n  if (line.startsWith(\"> >\")) return \"deepquote\";\n  if (line.startsWith(\">\")) return \"quote\";\n\n  return \"text\";\n}\n","export function linkify(text, matchFn) {\n  const rx = /http[s]?:\\/\\/\\S*\\b[=/]?/g;\n\n  const items = [];\n  let start = 0;\n  text.replaceAll(rx, (match, offset) => {\n    items.push(text.substring(start, offset));\n    items.push(new URL(match));\n    start = offset + match.length;\n  });\n\n  items.push(text.substring(start, text.length));\n  return items;\n}\n","<script>\n  export let content;\n  export let wrap = 80;\n\n  let folded = true;\n</script>\n\n<a\n  href=\"#fold\"\n  style={`width: ${wrap}ch;`}\n  class=\"block whitespace-pre-line break-words text-gray-500 border-l-8 border-gray-400 pl-3\"\n  on:click|preventDefault={() => (folded = !folded)}\n>\n  {#if folded}\n    <span class=\"text-red-500 font-semibold\">...</span>\n  {:else}\n    {content}\n  {/if}\n</a>\n","<script>\n  import { parseMessageBody } from \"../lib/email\";\n  import { linkify } from \"../lib/linkify\";\n\n  import DeepquoteBlock from \"./DeepquoteBlock.svelte\";\n\n  export let body;\n  export let messageId;\n  export let wrap = 80;\n\n  $: content = parseMessageBody(body);\n  $: console.debug(`selected message ${messageId},`, \"body:\", body, \"parsed content:\", content);\n</script>\n\n{#if content.text.length > 0}\n  {#each content.text as block}\n    {#if block.type === \"quote\"}\n      <p\n        style={`width: ${wrap}ch;`}\n        class=\"whitespace-pre-line break-words text-gray-600 border-l-8 border-gray-400 pl-3\"\n      >\n        {block.content}\n      </p>\n    {:else if block.type === \"deepquote\"}\n      <DeepquoteBlock content={block.content} />\n    {:else}\n      <p style={`width: ${wrap}ch;`} class=\"whitespace-pre-line break-words\">\n        {#each linkify(block.content) as text}\n          {#if text instanceof URL}\n            <a\n              href={text.toString()}\n              class=\"inline text-gray-600 hover:text-red-600\"\n              target=\"_blank\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                class=\"inline fill-current h-5\"\n                ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n                  d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n                /></svg\n              >\n              <span class=\"text-sm\">{text.hostname}</span>\n            </a>\n          {:else}\n            {text}\n          {/if}\n        {/each}\n      </p>\n    {/if}\n  {/each}\n{:else}\n  <p class=\"text-lg\">Email has no plaintext content.</p>\n{/if}\n\n{#if content.html.length > 0}\n  <p class=\"mt-3\">\n    {#each content.html as block}\n      <a\n        href={`/api/messages/${messageId}/parts/${block.id}`}\n        class=\"block text-red-400 hover:text-red-500 font-semibold underline\"\n        target=\"_blank\">Open HTML</a\n      >\n    {/each}\n  </p>\n{/if}\n\n{#if content.attachments.length > 0}\n  <div class=\"flex flex-row flex-wrap mt-3\">\n    {#each content.attachments as attach}\n      <a\n        href={`/api/messages/${messageId}/parts/${attach.id}`}\n        download={attach.filename}\n        class=\"flex flex-row items-center mr-2 mb-2 p-3 rounded border-2 border-gray-500 text-gray-600 font-semibold hover:border-gray-700 hover:text-gray-800 visited:text-gray-600 hover:no-underline\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          class=\"fill-current mr-1 w-5\"\n          ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n            d=\"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n          /></svg\n        >\n        {attach.filename}</a\n      >\n    {/each}\n  </div>\n{/if}\n","<script>\n  export let address;\n  export let removed = false;\n\n  $: [, name, mail] = address.match(/(.*?)\\s(\\<.*?\\>)/) || [null, address];\n</script>\n\n<span class={`${removed ? \"line-through\" : \"\"}`}>{name}</span>\n\n{#if mail}\n  <span class={`text-gray-600 pl-1 ${removed ? \"line-through\" : \"\"}`}\n    >{mail}</span\n  >\n{/if}\n","<script>\n  import FormattedAddress from \"./FormattedAddress.svelte\";\n  import TagBadge from \"./TagBadge.svelte\";\n\n  export let message;\n</script>\n\n<div class=\"p-3\">\n  <p class=\"mb-2\">\n    <span class=\"inline-flex w-10 text-gray-500\">From: </span>\n    <FormattedAddress address={message.headers.From} />\n  </p>\n  <p class=\"mb-2 text-gray-500\">\n    <span class=\"inline-flex w-10\">To: </span>\n    {message.headers.To}\n  </p>\n  {#if message.headers.Cc}\n    <p class=\"mb-2 text-gray-500\">\n      <span class=\"inline-flex w-10\">Cc: </span>\n      {message.headers.Cc}\n    </p>\n  {/if}\n\n  <h3 class=\"mb-3\">\n    {message.headers.Subject}\n  </h3>\n\n  <div class=\"flex\">\n    <div class=\"inline-flex items-center mr-4 text-gray-600 text-sm\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-4 fill-current mr-1\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n        /><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" /></svg\n      >\n      {message.headers.Date}\n    </div>\n\n    {#each message.tags as tag}\n      <TagBadge class=\"mr-2\" {tag} />\n    {/each}\n  </div>\n</div>\n","import { writable } from \"svelte/store\";\n\nimport { quotedText } from \"../lib/email\";\n\nconst { subscribe, set, update } = writable(null);\n\nfunction create() {\n  set({ to: [], cc: [], subject: \"\", body: \"\", headers: {}, attachments: [] });\n}\n\nfunction reply(reply) {\n  const { To, Cc, Subject, ...rest } = reply[\"reply-headers\"];\n  const { headers, body } = reply.original;\n\n  const content = body.map((item) => quotedText(item)).join(\"\\n\");\n  set({\n    to: To.split(\", \"),\n    cc: Cc?.split(\", \") || [],\n    subject: Subject,\n    headers: { ...rest },\n    body: content,\n    originalHeaders: headers,\n    reply: true,\n    attachments: [],\n  });\n}\n\nfunction forward({ body, headers }) {\n  const content = body.map((item) => quotedText(item)).join(\"\\n\");\n  set({\n    to: [],\n    cc: [],\n    subject: `Fwd: ${headers.Subject}`,\n    headers: {},\n    body: content,\n    originalHeaders: headers,\n    reply: true,\n    attachments: [],\n  });\n}\n\nfunction setField(updates) {\n  update((message) => ({ ...message, ...updates }));\n}\n\nfunction setBody({ body }) {\n  update((message) => ({ ...message, body }));\n}\n\nfunction destroy() {\n  set(null);\n}\n\nexport default {\n  subscribe,\n  create,\n  reply,\n  forward,\n  setField,\n  set: setBody,\n  destroy,\n};\n","<script>\n  import { updateTags, updateThreadTags, tagChanges } from \"../lib/tagging\";\n\n  import ApiClient from \"../client\";\n  import url, { selectedMailbox, selectedThread } from \"../stores/url\";\n  import mailboxes from \"../stores/mailboxes\";\n  import threads from \"../stores/threads\";\n  import thread, { findOtherMessage } from \"../stores/thread\";\n  import selectedMessage from \"../stores/message\";\n  import newMessage from \"../stores/new_message\";\n\n  import ToolbarButton from \"./ToolbarButton.svelte\";\n  import TagPicker from \"./TagPicker.svelte\";\n\n  export let message;\n\n  let showTagPicker = false;\n\n  function markUnread() {\n    updateTags($selectedThread, message.id, [\"+unread\"]);\n  }\n\n  function selectNextThread() {\n    const idx = $threads.findIndex(({ thread }) => thread === $selectedThread);\n    const nextThread = $threads[idx + 1];\n    if (nextThread) {\n      url.selectThread($selectedMailbox, nextThread.thread);\n    } else {\n      url.deselectThread();\n    }\n  }\n\n  function move(folder) {\n    const { changes, fromTags } = tagChanges(\n      $mailboxes,\n      $selectedMailbox,\n      folder\n    );\n    updateTags($selectedThread, message.id, changes);\n\n    const other = findOtherMessage($thread, message.id, fromTags);\n    if (other) {\n      selectedMessage.selectMessage(other.id);\n    } else {\n      selectNextThread();\n    }\n  }\n\n  function addTag({ detail }) {\n    updateTags($selectedThread, message.id, [`+${detail}`]);\n  }\n\n  function removeTag({ detail }) {\n    updateTags($selectedThread, message.id, [`-${detail}`]);\n  }\n\n  async function reply(replyTo) {\n    const reply = await ApiClient.default.replyToMessage(message.id, replyTo);\n    newMessage.reply(reply);\n  }\n\n  async function forward() {\n    newMessage.forward(message);\n  }\n</script>\n\n<ToolbarButton\n  tooltip=\"Mark as unread\"\n  tooltipPosition=\"left\"\n  class=\"mr-3\"\n  on:click={markUnread}\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    class=\"w-full fill-current\"\n    ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n      d=\"M18.83 7h-2.6L10.5 4 4 7.4V17c-1.1 0-2-.9-2-2V7.17c0-.53.32-1.09.8-1.34L10.5 2l7.54 3.83c.43.23.73.7.79 1.17zM20 8H7c-1.1 0-2 .9-2 2v9c0 1.1.9 2 2 2h13c1.1 0 2-.9 2-2v-9c0-1.1-.9-2-2-2zm0 3.67L13.5 15 7 11.67V10l6.5 3.33L20 10v1.67z\"\n    /></svg\n  >\n</ToolbarButton>\n\n{#if $selectedMailbox !== \"search\"}\n  <ToolbarButton\n    tooltip=\"Move to archive\"\n    class=\"mr-1\"\n    on:click={() => move(\"archive\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      enable-background=\"new 0 0 24 24\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current w-full\"\n      ><g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g\n        ><path\n          d=\"M20,2H4C3,2,2,2.9,2,4v3.01C2,7.73,2.43,8.35,3,8.7V20c0,1.1,1.1,2,2,2h14c0.9,0,2-0.9,2-2V8.7c0.57-0.35,1-0.97,1-1.69V4 C22,2.9,21,2,20,2z M15,14H9v-2h6V14z M20,7H4V4h16V7z\"\n        /></g\n      ></svg\n    >\n  </ToolbarButton>\n  <ToolbarButton\n    tooltip=\"Move to inbox\"\n    class=\"mr-1\"\n    on:click={() => move(\"inbox\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"fill-current w-full\"\n      ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path\n        d=\"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z\"\n      /></svg\n    >\n  </ToolbarButton>\n  <ToolbarButton\n    tooltip=\"Move to spam\"\n    class=\"mr-1\"\n    on:click={() => move(\"spam\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n      /></svg\n    >\n  </ToolbarButton>\n  <ToolbarButton\n    tooltip=\"Move to trash\"\n    class=\"mr-3\"\n    on:click={() => move(\"trash\")}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n      /></svg\n    >\n  </ToolbarButton>\n{/if}\n\n<div>\n  <ToolbarButton\n    tooltip=\"Tag\"\n    class=\"mr-3\"\n    on:click={() => (showTagPicker = true)}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n      /></svg\n    >\n  </ToolbarButton>\n\n  {#if showTagPicker}\n    <TagPicker\n      class=\"absolute\"\n      tags={message.tags}\n      on:add={addTag}\n      on:remove={removeTag}\n      on:close={() => (showTagPicker = false)}\n    />\n  {/if}\n</div>\n\n<div class=\"flex flex-row ml-auto\">\n  <ToolbarButton tooltip=\"Reply\" class=\"mr-1\" on:click={() => reply(\"sender\")}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\"\n      /></svg\n    >\n  </ToolbarButton>\n  <ToolbarButton tooltip=\"Reply all\" class=\"mr-1\" on:click={() => reply(\"all\")}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M7 8V5l-7 7 7 7v-3l-4-4 4-4zm6 1V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\"\n      /></svg\n    >\n  </ToolbarButton>\n  <ToolbarButton tooltip=\"Forward\" tooltipPosition=\"right\" on:click={forward}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M12 8V4l8 8-8 8v-4H4V8z\"\n      /></svg\n    >\n  </ToolbarButton>\n</div>\n","<script>\n  import url from \"../stores/url\";\n\n  import BodyItem from \"./BodyItem.svelte\";\n  import MessageInfo from \"./MessageInfo.svelte\";\n  import MessageToolbar from \"./MessageToolbar.svelte\";\n\n  export let message;\n</script>\n\n<div class=\"relative bg-gray-100\" data-message={message.id}>\n  <MessageInfo {message} />\n\n  <button\n    class=\"absolute w-5 top-3 right-3 text-gray-500 order-0 hover:text-gray-800 active:text-gray-500 focus:outline-none\"\n    on:click={() => url.deselectThread()}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-full fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n      /></svg\n    >\n  </button>\n\n  <div class=\"flex flex-row p-3 border-b border-t\">\n    <MessageToolbar {message} />\n  </div>\n</div>\n\n<div class=\"p-5 border-b-2 border-gray-200\">\n  {#each message.body as body (body.id)}\n    <BodyItem {body} messageId={btoa(message.id)} wrap=\"100\" />\n  {/each}\n</div>\n","<script>\n  import { markAsRead } from \"../lib/tagging\";\n\n  import { selectedThread } from \"../stores/url\";\n  import selectedMessage from \"../stores/message\";\n\n  import FormattedAddress from \"./FormattedAddress.svelte\";\n\n  export let message;\n  export let level;\n\n  function selectMessage() {\n    selectedMessage.selectMessage(message.id);\n    markAsRead($selectedThread, message);\n  }\n</script>\n\n<div\n  class=\"p-3 flex flex-row justify-between items-center bg-gray-100 border-b-2 border-gray-200 cursor-pointer\"\n  on:click={() => selectMessage()}\n>\n  <div\n    class=\"flex flex-row items-center\"\n    style={`padding-left: ${10 * level}px;`}\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      class=\"w-5 fill-current\"\n      ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n        d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n      /></svg\n    >\n    <FormattedAddress\n      address={message.headers.From}\n      removed={message.tags.includes(\"trash\")}\n    />\n  </div>\n  <span class=\"text-gray-500 text-sm\">{message.headers.Date}</span>\n</div>\n","<script>\n  import Message from \"./Message.svelte\";\n  import CollapsedMessage from \"./CollapsedMessage.svelte\";\n  import selectedMessage from \"../stores/message\";\n\n  export let thread;\n  export let level = 0;\n\n  function hiddenMessage({ tags }) {\n    return tags.includes(\"draft\");\n  }\n</script>\n\n<div>\n  {#if thread}\n    {#each thread as [message, subthread]}\n      {#if !hiddenMessage(message)}\n        <div data-message={message.id}>\n          {#if message.id !== $selectedMessage}\n            <CollapsedMessage {message} {level} />\n          {:else}\n            <Message {message} />\n          {/if}\n        </div>\n      {/if}\n\n      <svelte:self thread={subthread} level={level + 1} />\n    {/each}\n  {/if}\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  export let id;\n  export let value;\n\n  const dispatch = createEventDispatcher();\n  let input;\n  let focused = false;\n\n  $: classes = focused\n    ? \"border-red-300\"\n    : \"border-gray-400 hover:border-gray-500\";\n\n  function formattedAddress(address) {\n    const matches = /(.*)\\s\\<(.*)\\>/.exec(address);\n    if (!matches) return address;\n\n    return matches[1];\n  }\n\n  function onKeyDown({ keyCode }) {\n    if (keyCode !== 8) return;\n    if (input.value.length > 0) return;\n\n    dispatch(\"change\", value.slice(0, value.length - 1));\n  }\n\n  function onChange({ target }) {\n    dispatch(\"change\", [...value, target.value]);\n    target.value = null;\n  }\n</script>\n\n<div\n  class=\"flex-1 flex flex-row flex-wrap px-3 p-1 bg-white text-gray-700 rounded border {classes}\"\n>\n  {#each value as address}\n    <span\n      class=\"mr-2 my-1 px-2 py-1 text-xs rounded bg-gray-600 text-white truncate max-w-md\"\n      >{formattedAddress(address)}</span\n    >\n  {/each}\n\n  <input\n    {id}\n    type=\"text\"\n    class=\"flex-1 outline-none\"\n    bind:this={input}\n    on:focus={() => (focused = true)}\n    on:blur={() => (focused = false)}\n    on:keydown={onKeyDown}\n    on:change={onChange}\n  />\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  export let blocks = [];\n\n  const dispatch = createEventDispatcher();\n  let content = blocks;\n\n  function beforeInput(e) {\n    const ranges = e.getTargetRanges();\n    if (ranges.length === 0) return;\n\n    const { startContainer, startOffset } = ranges[0];\n    const node = startContainer.parentNode;\n\n    if (node.dataset.type !== \"quote\") return;\n\n    if (e.inputType === \"insertParagraph\") {\n      e.preventDefault();\n      node.innerHTML = startContainer.wholeText.slice(0, startOffset);\n      const otherQuote = `\n<p class=\"whitespace-pre-wrap break-words\" data-type=\"text\">\\n</p>\n<p class=\"whitespace-pre-wrap break-words text-gray-600 border-l-8 border-gray-400 pl-3\" data-type=\"quote\">${startContainer.wholeText.slice(\n        startOffset + 1\n      )}</p>`;\n      node.insertAdjacentHTML(\"afterend\", otherQuote);\n      window.getSelection().collapse(node.nextSibling.nextSibling);\n    } else {\n      if (!e.inputType.startsWith(\"deleteContent\")) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  function input({ target }) {\n    const newBlocks = [];\n    for (const el of target.querySelectorAll(\"p\")) {\n      const content =\n        el.dataset.type === \"quote\"\n          ? el.textContent.replace(/^/gm, \"> \")\n          : el.textContent;\n      newBlocks.push({\n        type: el.dataset.type,\n        content: content + (content.endsWith(\"\\n\") ? \"\" : \"\\n\"),\n      });\n    }\n    dispatch(\"input\", newBlocks);\n  }\n</script>\n\n<div\n  contenteditable=\"true\"\n  style=\"width: 85ch;\"\n  class=\"h-80 border rounded p-3 outline-none border-gray-400 hover:border-gray-500 focus:border-red-300 overflow-y-auto\"\n  on:input={input}\n  on:beforeinput={beforeInput}\n>\n  {#each content as block}\n    {#if block.type === \"quote\"}\n      <p\n        class=\"whitespace-pre-wrap break-words text-gray-600 border-l-8 border-gray-400 pl-3\"\n        data-type={block.type}\n      >\n        {block.content.replace(/^>\\s?/gm, \"\")}\n      </p>\n    {:else}\n      <p class=\"whitespace-pre-wrap break-words\" data-type={block.type}>\n        {block.content}\n      </p>\n    {/if}\n  {/each}\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  import ApiClient from \"../client\";\n  import { address, name } from \"../stores/mailboxes\";\n  import newMessage from \"../stores/new_message\";\n  import { selectedThread } from \"../stores/url\";\n  import thread from \"../stores/thread\";\n\n  import AddressField from \"./AddressField.svelte\";\n  import TextEditor from \"./TextEditor.svelte\";\n\n  const dispatch = createEventDispatcher();\n  let submiting = false;\n  let error = null;\n  let fileInput;\n\n  async function submitMessage() {\n    error = null;\n    submiting = true;\n    try {\n      await ApiClient.default.sendMessage($newMessage);\n      submiting = false;\n      newMessage.destroy();\n      thread.fetch($selectedThread);\n    } catch (e) {\n      error = e.message;\n      submiting = false;\n    }\n  }\n\n  let blocks = [{ type: \"text\", content: \"\" }];\n  if ($newMessage?.reply) {\n    const { Date, From } = $newMessage?.originalHeaders;\n    blocks.push(\n      { type: \"text\", content: `On ${Date}, ${From} wrote:` },\n      { type: \"quote\", content: $newMessage?.body }\n    );\n  }\n\n  function onInput({ detail }) {\n    blocks = detail;\n    newMessage.setField({\n      body: blocks.map(({ content }) => content).join(\"\"),\n    });\n  }\n\n  function formatSize(size) {\n    if (size > 1000000) {\n      return `${(size / 1000000).toFixed(2)}MB`;\n    } else if (size > 1000) {\n      return `${(size / 1000).toFixed(2)}KB`;\n    } else {\n      return `${size}B`;\n    }\n  }\n\n  function attachFile() {\n    for (const file of fileInput.files) {\n      newMessage.setField({ attachments: [...$newMessage.attachments, file] });\n    }\n  }\n\n  function removeAttachment(index) {\n    newMessage.setField({\n      attachments: $newMessage.attachments.filter((_, idx) => idx !== index),\n    });\n  }\n</script>\n\n<div\n  class=\"absolute bottom-5 right-5 bg-white shadow rounded border-2 border-gray-500\"\n  style=\"max-width: calc(85ch + 2rem)\"\n>\n  <div\n    class=\"px-3 py-2 flex flex-row items-center justify-between bg-gray-500 text-white\"\n  >\n    <span>{$newMessage?.subject || \"New message\"}</span>\n\n    <button\n      class=\"w-5 text-white hover:text-gray-200 active:text-gray-400 focus:outline-none\"\n      on:click={() => dispatch(\"close\")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"w-full fill-current\"\n        ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n          d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n        /></svg\n      >\n    </button>\n  </div>\n\n  <div class=\"p-3 bg-gray-100 text-gray-500\">\n    <div class=\"flex flex-row items-center mb-2\">\n      <label class=\"w-20\" for=\"from\">From: </label>\n      <span class=\"text-gray-600\">\n        <strong class=\"font-semibold \">{$name}</strong>\n        &lt;{$address}&gt;\n      </span>\n    </div>\n\n    <div class=\"flex flex-row items-center mb-2\">\n      <label class=\"w-20 flex-shrink-0\" for=\"to\">To: </label>\n      <AddressField\n        id=\"to\"\n        value={$newMessage?.to}\n        on:change={({ detail }) => newMessage.setField({ to: detail })}\n      />\n    </div>\n\n    <div class=\"flex flex-row items-center mb-2\">\n      <label class=\"w-20 flex-shrink-0\" for=\"cc\">CC: </label>\n      <AddressField\n        id=\"cc\"\n        value={$newMessage?.cc}\n        on:change={({ detail }) => newMessage.setField({ cc: detail })}\n      />\n    </div>\n\n    <div class=\"flex flex-row items-center\">\n      <label class=\"w-20\" for=\"subject\">Subject: </label>\n      <input\n        type=\"text\"\n        id=\"subject\"\n        class=\"flex-1 outline-none px-3 py-1 bg-white text-gray-700 rounded border border-gray-400 hover:border-gray-500 focus:border-red-300\"\n        value={$newMessage?.subject}\n        on:change={({ target }) =>\n          newMessage.setField({ subject: target.value })}\n      />\n    </div>\n  </div>\n\n  <div class=\"p-3\">\n    <TextEditor {blocks} on:input={(e) => onInput(e)} />\n  </div>\n\n  <div class=\"px-3 mb-3 flex flex-row justify-between items-center\">\n    <div class=\"flex flex-row flex-wrap\">\n      <input\n        multiple\n        type=\"file\"\n        class=\"hidden\"\n        bind:this={fileInput}\n        on:change={attachFile}\n      />\n      <button\n        class=\"h-10 p-2 mr-3 mb-1 rounded hover:border-red-500 bg-white text-gray-700 active:bg-red-300 focus:outline-none border\"\n        on:click={() => fileInput.click()}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          class=\"h-5 fill-current\"\n          ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n            d=\"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n          /></svg\n        >\n      </button>\n\n      {#if $newMessage?.attachments}\n        {#each $newMessage.attachments as attach, idx}\n          <button\n            class=\"h-10 border border-gray-600 p-2 mr-1 mb-1 rounded text-gray-600 text-sm hover:border-red-500 active:bg-red-300 focus:outline-none\"\n            on:click={() => removeAttachment(idx)}\n            ><strong class=\"mr-1\">{attach.name}</strong> ({formatSize(\n              attach.size\n            )})</button\n          >\n        {/each}\n      {/if}\n    </div>\n\n    <div class=\"flex flex-row\">\n      <button\n        class=\"h-10 p-2 mr-3 rounded hover:border-red-500 bg-white text-gray-700 active:bg-red-300 focus:outline-none border\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          class=\"h-5 fill-current\"\n          ><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path\n            d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n          /></svg\n        >\n      </button>\n\n      <button\n        class=\"bg-red-500 hover:bg-red-600 active:bg-red-700 focus:outline-none px-3 text-white h-10 rounded border-0 font-semibold\"\n        disabled={submiting}\n        on:click={() => submitMessage()}\n      >\n        Send\n      </button>\n    </div>\n  </div>\n</div>\n","<script>\n  import { onMount, tick } from \"svelte\";\n\n  import Tailwind from \"./Tailwind.svelte\";\n  import RefreshButton from \"./components/RefreshButton.svelte\";\n  import ComposeButton from \"./components/ComposeButton.svelte\";\n  import MenuButton from \"./components/MenuButton.svelte\";\n  import Mailboxes from \"./components/Mailboxes.svelte\";\n  import SearchField from \"./components/SearchField.svelte\";\n  import ThreadToolbar from \"./components/ThreadToolbar.svelte\";\n  import ThreadPages from \"./components/ThreadPages.svelte\";\n  import Threads from \"./components/Threads.svelte\";\n  import Thread from \"./components/Thread.svelte\";\n  import MessageForm from \"./components/MessageForm.svelte\";\n\n  import { mailboxTitles, refreshInterval } from \"./config\";\n  import { markAsRead } from \"./lib/tagging\";\n  import favicon from \"./lib/favicon\";\n\n  import url, {\n    selectedMailbox,\n    selectedThread,\n    searchTerms,\n  } from \"./stores/url\";\n  import mailboxes, { address } from \"./stores/mailboxes\";\n  import thread, {\n    findMessage,\n    findOtherMessage,\n    findLastMessage,\n  } from \"./stores/thread\";\n  import selectedMessage from \"./stores/message\";\n  import newMessage from \"./stores/new_message\";\n  import selectedThreads from \"./stores/selected_threads\";\n\n  let refreshing = false;\n  let threadList, messageList;\n  let sidebarCollapsed = true;\n\n  onMount(() => {\n    setInterval(() => refreshMailboxes(), refreshInterval);\n  });\n\n  $: currentMailbox =\n    $searchTerms?.length > 0\n      ? { id: \"search\", terms: $searchTerms, tags: [] }\n      : $mailboxes.find(({ id }) => id === $selectedMailbox);\n  $: document.title =\n    currentMailbox?.unread > 0\n      ? `(${currentMailbox.unread}) ${mailboxTitles[$selectedMailbox]}`\n      : mailboxTitles[$selectedMailbox] || $searchTerms;\n  $: document.head.querySelector('link[rel=\"icon\"]').href = favicon(\n    currentMailbox?.unread > 0\n  );\n\n  $: if ($selectedThread) {\n    loadThread();\n    scrollToThread();\n  }\n  $: if ($selectedMessage)\n    scrollToMessage(findMessage($thread, $selectedMessage));\n\n  function refreshMailboxes() {\n    refreshing = true;\n    const start = Date.now();\n    mailboxes.updateUnreadCounters();\n    setTimeout(() => (refreshing = false), 1000 - Date.now() + start);\n  }\n\n  async function loadThread() {\n    const res = await thread.fetch($selectedThread);\n    await tick();\n\n    const messages = messageList.querySelectorAll(`div[data-message]`);\n    if (messages.length === 0) return;\n\n    const messageId = messages[messages.length - 1].dataset.message;\n    const message =\n      findOtherMessage($thread, null, [\"unread\"]) ||\n      findLastMessage($thread, null, [], [\"trash\"]) ||\n      findMessage(res, messageId);\n\n    selectedMessage.selectMessage(message.id);\n    markAsRead($selectedThread, message);\n  }\n\n  async function scrollToThread() {\n    await tick();\n    let interval;\n\n    const check = () => {\n      const row = threadList.querySelector(\n        `a[data-thread=\"${$selectedThread}\"]`\n      );\n      if (!row) return;\n\n      row.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n      clearInterval(interval);\n    };\n\n    interval = setInterval(check, 100);\n    check();\n  }\n\n  async function scrollToMessage(message) {\n    if (!message) return;\n\n    await tick();\n    const item = messageList.querySelector(`div[data-message=\"${message.id}\"]`);\n    item.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  }\n</script>\n\n<Tailwind />\n\n<div class=\"h-screen w-screen flex\">\n  <aside\n    style={`width: ${sidebarCollapsed ? 4 : 14}rem`}\n    class=\"flex-shrink-0 flex flex-col bg-gray-600\"\n  >\n    <div\n      class={`h-14 flex flex-row ${\n        sidebarCollapsed ? \"justify-center\" : \"justify-between\"\n      } items-center p-4`}\n    >\n      {#if !sidebarCollapsed}\n        <h2 class=\"text-gray-100 font-semibold\">{$address}</h2>\n      {/if}\n\n      <RefreshButton {refreshing} on:click={refreshMailboxes} />\n    </div>\n\n    <div class=\"px-4\">\n      <ComposeButton\n        collapsed={sidebarCollapsed}\n        on:click={() => newMessage.create()}\n      />\n    </div>\n\n    <div class=\"p-4 flex-1\">\n      <Mailboxes collapsed={sidebarCollapsed} />\n    </div>\n\n    <div class=\"p-4\">\n      <MenuButton\n        collapsed={sidebarCollapsed}\n        on:click={() => (sidebarCollapsed = !sidebarCollapsed)}\n      />\n    </div>\n  </aside>\n\n  <main\n    class=\"flex flex-col\"\n    style={`width: calc(100% - ${sidebarCollapsed ? 4 : 14}rem)`}\n  >\n    <header\n      class=\"h-14 flex-shrink-0 flex flex-row items-center justify-center py-3 pr-3 border-b border-gray-500 bg-gray-600\"\n    >\n      <SearchField />\n      <ThreadToolbar disabled={$selectedThreads.length === 0} />\n      <ThreadPages />\n    </header>\n\n    <section\n      class={`${\n        $selectedThread ? \"h-60 border-b-8\" : \"flex-1\"\n      } flex-shrink-0 border-gray-300 overflow-y-auto`}\n      bind:this={threadList}\n    >\n      <Threads mailbox={currentMailbox} />\n    </section>\n\n    {#if $selectedThread}\n      <section class=\"flex-1 w-full overflow-y-auto\" bind:this={messageList}>\n        <Thread thread={$thread} />\n      </section>\n    {/if}\n  </main>\n\n  {#if $newMessage}\n    <MessageForm on:close={() => newMessage.destroy()} />\n  {/if}\n</div>\n\n<style global>\n  body {\n    padding: 0;\n  }\n</style>\n","export default function favicon(hasUnread) {\n  if (!hasUnread) {\n    return \"/favicon.png\";\n  }\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.height = 64;\n  canvas.width = 64;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.font = \"64px serif\";\n  ctx.fillText(\"✉️\", 0, 64);\n\n  return canvas.toDataURL();\n}\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","refreshing","collapsed","id","iconType","mailboxIds","mailboxTitles","inbox","archive","sent","draft","spam","trash","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","ApiClient","baseURL","method","path","res","fetch","headers","Content-Type","Accept","body","JSON","stringify","ok","json","ApiError","status","statusText","request","terms","page","perPage","threadId","tags","message","formData","FormData","to","addr","cc","subject","attachments","file","messageId","replyTo","btoa","super","currentPage","totalThreads","async","total","threads","default","setTags","thread","selectMessage","initialURL","URL","window","location","href","mailbox","pathname","split","searchTerms","searchParams","state","url","pushState","history","console","debug","$href","selectMailbox","selectThread","newState","escape","deselectThread","selectedMessage","search","selectedMailbox","$url","selectedThread","address","mailboxes","updateUnreadCounters","current","idx","unread","promise","info","token","resolved","needs_flush","blocks","mount","error","catch","hasCatch","$searchTerms","charCode","findMessage","subThread","match","findOtherMessage","withTags","withoutTags","every","tag","includes","findLastMessage","messages","matchedMessages","sort","timestamp","acc","getThreadTags","threadTags","updateTags","updates","newTags","updateThreadTags","markAsRead","tagChanges","fromMailbox","toMailbox","fromTags","find","toTags","changes","tooltip","tooltipPosition","variant","disabled","className","tooltipClass","hover","viewOnly","classes","dispatch","newTag","showTagPicker","move","folder","$selectedThreads","$mailboxes","$selectedMailbox","selectedThreads","$threads","reduce","localeCompare","lastPage","ceil","$totalThreads","stopPropagation","checked","borderClass","commonTag","date_relative","authors","unreadClasses","$currentPage","getTextContent","startsWith","content","child","quotedText","replace","join","parseMessageBody","html","curBlock","line","lType","lineType","parseTextContent","linkify","matchFn","items","replaceAll","offset","substring","wrap","folded","hostname","toString","filename","removed","mail","Cc","To","Subject","Date","From","reply","original","item","originalHeaders","forward","setField","$selectedThread","other","$thread","findIndex","nextThread","selectNextThread","replyToMessage","newMessage","level","hiddenMessage","formattedAddress","matches","exec","focused","keyCode","beforeInput","ranges","getTargetRanges","startContainer","startOffset","dataset","inputType","innerHTML","otherQuote","insertAdjacentHTML","getSelection","collapse","nextSibling","newBlocks","el","querySelectorAll","textContent","endsWith","formatSize","size","toFixed","fileInput","submiting","submitMessage","sendMessage","$newMessage","onInput","removeAttachment","_","files","click","threadList","messageList","sidebarCollapsed","refreshMailboxes","now","setTimeout","setInterval","currentMailbox","title","head","querySelector","hasUnread","canvas","height","width","getContext","font","fillText","toDataURL","favicon","loadThread","interval","check","row","scrollIntoView","behavior","clearInterval","scrollToThread","$selectedMessage","scrollToMessage"],"mappings":"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"}